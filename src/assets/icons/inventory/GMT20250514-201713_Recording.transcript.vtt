WEBVTT

1
00:00:00.040 --> 00:00:02.870
Richmond Andoh: To for the progress.

2
00:00:06.670 --> 00:00:07.330
Lion Prado: No.

3
00:00:09.535 --> 00:00:12.040
Lion Prado: Is she moving?

4
00:00:28.680 --> 00:00:30.189
Richmond Andoh: Oh, here we am coming.

5
00:01:02.530 --> 00:01:04.449
Richmond Andoh: Hello, my son is very slow.

6
00:01:09.590 --> 00:01:11.640
kofi Aseda Ayeh Bampoe: What's happening? What's happening?

7
00:01:12.360 --> 00:01:13.070
kofi Aseda Ayeh Bampoe: Oh.

8
00:01:14.509 --> 00:01:15.889
Lion Prado: I think.

9
00:01:20.140 --> 00:01:20.710
kofi Aseda Ayeh Bampoe: Yeah.

10
00:01:20.710 --> 00:01:21.130
Richmond Andoh: Same.

11
00:01:21.573 --> 00:01:23.789
kofi Aseda Ayeh Bampoe: It? Yeah, this guy.

12
00:01:26.173 --> 00:01:29.590
Lion Prado: Go on cheers

13
00:01:36.230 --> 00:01:38.119
Lion Prado: alright! Thank you, Richmond.

14
00:01:38.610 --> 00:01:39.420
Richmond Andoh: You're welcome.

15
00:02:00.770 --> 00:02:03.669
Sam Edem: Yes, I am. I'm trying to share.

16
00:02:04.320 --> 00:02:06.080
Sam Edem: Oh, my screen.

17
00:02:06.880 --> 00:02:15.320
Sam Edem: I don't know if okay, so my powershell right.

18
00:02:17.010 --> 00:02:18.320
Lion Prado: Yay, of course.

19
00:02:20.600 --> 00:02:23.300
Sam Edem: Let let me know if that's what you're saying.

20
00:02:23.790 --> 00:02:26.360
Sam Edem: Oh, just a moment.

21
00:02:28.182 --> 00:02:31.069
Lion Prado: I don't know. I can't see this.

22
00:02:31.070 --> 00:02:32.940
Sam Edem: Just a moment, please.

23
00:02:33.614 --> 00:02:34.989
Lion Prado: Yeah, you can answer.

24
00:02:35.230 --> 00:02:37.420
Sam Edem: Well, you can see my Powershell.

25
00:02:38.070 --> 00:02:38.950
Lion Prado: Yes, please.

26
00:02:39.900 --> 00:02:49.220
Sam Edem: Okay, select select that just a moment. Just a moment. I have too many tabs opened.

27
00:02:50.210 --> 00:02:52.859
Sam Edem: Just a moment, please.

28
00:02:58.300 --> 00:03:02.640
Sam Edem: Where is my okay.

29
00:03:06.450 --> 00:03:10.670
Sam Edem: hold on. I want to stop sharing then Re, so that I would

30
00:03:11.270 --> 00:03:20.600
Sam Edem: pick up the partial exactly alright. I found it right. So here we go alright. You say I'm ready.

31
00:03:26.610 --> 00:03:33.710
Lion Prado: The, what interesting you switch your screen to Vs code switch.

32
00:03:33.710 --> 00:03:38.170
Sam Edem: Okay, okay, so how do I do that, please? It's installed. How do I do that?

33
00:03:39.140 --> 00:03:39.760
kofi Aseda Ayeh Bampoe: Okay.

34
00:03:40.380 --> 00:03:41.249
Lion Prado: Kind of yes.

35
00:03:42.930 --> 00:03:43.790
Sam Edem: I should do what.

36
00:03:44.810 --> 00:03:45.870
Lion Prado: From usl.

37
00:03:46.730 --> 00:03:48.680
Sam Edem: WSL right.

38
00:03:49.800 --> 00:03:50.280
Lion Prado: Yeah.

39
00:04:05.130 --> 00:04:06.962
kofi Aseda Ayeh Bampoe: Okay. Okay. Let me.

40
00:04:14.090 --> 00:04:15.130
D A V E: Hi! Yawn.

41
00:04:20.765 --> 00:04:21.620
Sam Edem: Administrator.

42
00:04:21.620 --> 00:04:22.069
Sam Edem: So a year.

43
00:04:24.100 --> 00:04:28.490
bigjesus: Bye, we don't, you know.

44
00:04:42.430 --> 00:04:44.019
Sam Edem: Am I on the right?

45
00:04:51.770 --> 00:04:52.660
Sam Edem: You know.

46
00:05:00.950 --> 00:05:05.789
DC ABLORH: Hello, please, is Adam sharing his screen, because I'm not seeing anything right now.

47
00:05:06.560 --> 00:05:11.420
Lion Prado: Now, I'm not sure he's sharing his, but if you are.

48
00:05:11.620 --> 00:05:17.349
Lion Prado: I don't know if he's facing problem. If anyone have your cli installed, you can share your screen.

49
00:05:17.350 --> 00:05:18.780
Sam Edem: I'm here.

50
00:05:22.240 --> 00:05:24.410
Sam Edem: please. Can you see my screen.

51
00:05:25.060 --> 00:05:25.640
LAWRENCE APPIAH-NUAMAH: Yeah.

52
00:05:25.640 --> 00:05:26.170
Lion Prado: Yeah, you can't.

53
00:05:26.170 --> 00:05:26.930
Sam Edem: Power, show.

54
00:05:27.650 --> 00:05:29.020
LAWRENCE APPIAH-NUAMAH: You can see. You can see.

55
00:05:29.420 --> 00:05:33.029
Sam Edem: Okay. So you said I should type WSL.

56
00:05:33.610 --> 00:05:34.550
Sam Edem: Right?

57
00:05:35.380 --> 00:05:40.419
Lion Prado: Yeah, I mean the partial.

58
00:05:40.850 --> 00:05:42.700
Lion Prado: That's as an additional feature, right?

59
00:05:43.350 --> 00:05:46.730
Sam Edem: Yes, this is as an administrator. Just

60
00:05:47.060 --> 00:05:49.349
Sam Edem: hold on. I need to get this right.

61
00:05:50.260 --> 00:05:51.320
Sam Edem: Oh.

62
00:05:52.090 --> 00:05:54.339
LAWRENCE APPIAH-NUAMAH: Has he already installed wso.

63
00:05:54.340 --> 00:05:56.649
Sam Edem: Yes, it's installed. So please check that.

64
00:05:56.650 --> 00:05:57.890
Lion Prado: Unstop Prices.

65
00:05:58.880 --> 00:06:00.089
Sam Edem: Check the top.

66
00:06:00.600 --> 00:06:04.280
Sam Edem: Okay, let me let me try it. here.us

67
00:06:08.110 --> 00:06:10.210
Sam Edem: so can you see the feedback?

68
00:06:10.350 --> 00:06:13.200
Sam Edem: Or is there anything else? I'm supposed to add.

69
00:06:16.640 --> 00:06:20.740
LAWRENCE APPIAH-NUAMAH: Okay. But have you? If if have you also urgent.

70
00:06:20.740 --> 00:06:25.449
Lion Prado: Then you just open it on this. You close.

71
00:06:25.760 --> 00:06:29.210
Lion Prado: Okay, and just open this as fast in this.

72
00:06:29.510 --> 00:06:31.750
Sam Edem: And that's deeds. Right?

73
00:06:32.810 --> 00:06:36.019
Sam Edem: It's already just a moment, please.

74
00:06:40.700 --> 00:06:44.550
Sam Edem: Hmm, 19.

75
00:06:47.510 --> 00:06:50.119
Sam Edem: Run as an administrator. Yes.

76
00:06:58.380 --> 00:07:02.020
Sam Edem: okay. So my badge is open.

77
00:07:02.590 --> 00:07:06.140
Sam Edem: Let me see if it's actually showing on the screen.

78
00:07:07.630 --> 00:07:09.100
Lion Prado: Yeah, we can see your screen.

79
00:07:09.300 --> 00:07:10.859
Lion Prado: The title? Yes, sir.

80
00:07:11.740 --> 00:07:18.890
Sam Edem: Okay, do this. So okay.

81
00:07:26.810 --> 00:07:27.880
Sam Edem: I should. What.

82
00:07:29.020 --> 00:07:30.549
Lion Prado: Cruise all your terminals.

83
00:07:31.040 --> 00:07:32.220
Sam Edem: Okay.

84
00:07:32.710 --> 00:07:37.729
LAWRENCE APPIAH-NUAMAH: I tried what you are saying, actually running it on the normal partial.

85
00:07:38.610 --> 00:07:39.969
Lion Prado: Yeah, I know.

86
00:07:40.430 --> 00:07:40.770
Sam Edem: Okay.

87
00:07:40.770 --> 00:07:43.369
Lion Prado: And booking is on the normal parcel.

88
00:07:44.290 --> 00:07:45.400
Sam Edem: Okay.

89
00:07:56.330 --> 00:07:59.550
Sam Edem: okay. My normal partial is open.

90
00:08:00.700 --> 00:08:03.210
Lion Prado: And and let's introduce over here.

91
00:08:03.720 --> 00:08:05.160
Sam Edem: Don't do this so.

92
00:08:07.360 --> 00:08:08.810
Lion Prado: I'm not sure you have it.

93
00:08:11.625 --> 00:08:15.089
Sam Edem: I installed this, and I shared the screen yesterday.

94
00:08:19.780 --> 00:08:22.970
Lion Prado: Kind wso dash, dash, awesome.

95
00:08:23.790 --> 00:08:25.670
Sam Edem: Wsl. What.

96
00:08:27.310 --> 00:08:28.639
Lion Prado: That is, the observation.

97
00:08:29.850 --> 00:08:31.679
Sam Edem: Dash, dash!

98
00:08:32.710 --> 00:08:33.649
Sam Edem: Can can you.

99
00:08:34.241 --> 00:08:37.149
Lion Prado: We were spaced before that.

100
00:08:37.610 --> 00:08:38.570
Sam Edem: The what.

101
00:08:40.250 --> 00:08:42.980
Lion Prado: Leave a space after the Wsl.

102
00:08:43.230 --> 00:08:45.150
Sam Edem: Okay. And then.

103
00:08:47.450 --> 00:08:48.940
Lion Prado: That's that's interesting.

104
00:08:51.160 --> 00:08:52.620
Sam Edem: Slash! Slash!

105
00:08:54.173 --> 00:08:57.710
Lion Prado: Dash, dash, dash, dash!

106
00:08:59.690 --> 00:09:00.670
Lion Prado: Beautiful!

107
00:09:01.420 --> 00:09:04.760
Sam Edem: Mission, then enter.

108
00:09:09.230 --> 00:09:12.920
LAWRENCE APPIAH-NUAMAH: How about you restarting this machine? Maybe.

109
00:09:13.250 --> 00:09:14.230
LAWRENCE APPIAH-NUAMAH: Yeah.

110
00:09:15.300 --> 00:09:17.829
Lion Prado: I don't know what's wrong. It's not showing.

111
00:09:20.560 --> 00:09:24.069
Sam Edem: I installed this yesterday, and I shared my screen.

112
00:09:25.360 --> 00:09:27.910
Sam Edem: so I'm not sure what's going on.

113
00:09:28.970 --> 00:09:31.409
Sam Edem: What I'm not getting right.

114
00:09:32.950 --> 00:09:36.350
Sam Edem: Hmm, WSL.

115
00:09:39.730 --> 00:09:44.270
Sam Edem: Understood since right now he hasn't opened it as administrator yet.

116
00:09:45.040 --> 00:09:47.210
Sam Edem: Yeah, you you said I should close as.

117
00:09:47.210 --> 00:09:48.010
LAWRENCE APPIAH-NUAMAH: Yeah, we.

118
00:09:48.960 --> 00:09:56.150
LAWRENCE APPIAH-NUAMAH: He has tried that already. It's no, it's not working. He has to maybe restart his machine or something. Yeah, yeah, he has tried both.

119
00:09:57.850 --> 00:10:01.440
Sam Edem: So I have to restart. I have to restart my system.

120
00:10:01.440 --> 00:10:12.370
LAWRENCE APPIAH-NUAMAH: Maybe it's a it's an is just try because you you said you study yesterday. So I'm thinking, maybe yeah. So maybe try restarting. Let's see if it's still.

121
00:10:12.370 --> 00:10:17.560
Kaleel: However, if you installed it yesterday, maybe you can have it in a a different show.

122
00:10:18.040 --> 00:10:24.810
Sam Edem: So if the blue. If Powershell is not working, then maybe open a bus or something.

123
00:10:25.620 --> 00:10:27.340
LAWRENCE APPIAH-NUAMAH: I've tried it on.

124
00:10:27.340 --> 00:10:30.329
LAWRENCE APPIAH-NUAMAH: Really. Okay, hold on.

125
00:10:30.330 --> 00:10:30.830
Lion Prado: Yeah.

126
00:10:31.160 --> 00:10:36.289
Lion Prado: OP. I think he was using gate, but normal and the background mask.

127
00:10:37.630 --> 00:10:38.449
Lion Prado: What is it.

128
00:10:38.450 --> 00:10:39.410
Sam Edem: What do you mean?

129
00:10:39.940 --> 00:10:43.169
Kaleel: Call back, is it not, please? I just.

130
00:10:43.390 --> 00:10:45.330
Sam Edem: Let me let me understand.

131
00:10:45.840 --> 00:10:50.470
LAWRENCE APPIAH-NUAMAH: Command. Prompt, maybe. Try command prompt, and let's see. Command prompt. Cmd.

132
00:10:50.630 --> 00:10:52.519
Lion Prado: Yeah, so 6 games.

133
00:10:54.380 --> 00:11:00.300
Sam Edem: CMD, yes, yeah. Oh, okay.

134
00:11:01.000 --> 00:11:04.770
Sam Edem: okay. So this should I open as an administrator.

135
00:11:05.300 --> 00:11:05.930
Lion Prado: Yeah.

136
00:11:06.790 --> 00:11:07.640
Sam Edem: Okay.

137
00:11:13.200 --> 00:11:18.469
Sam Edem: okay. And now, and the vessel was 60,

138
00:11:18.640 --> 00:11:24.330
Sam Edem: for I'm not okay. Let me. Just so. What should I type here, please? The same Wsl.

139
00:11:24.330 --> 00:11:25.700
Lion Prado: The same domain, as well.

140
00:11:26.150 --> 00:11:27.739
Sam Edem: WSL.

141
00:11:30.710 --> 00:11:32.889
Sam Edem: Windows, system 32.

142
00:11:35.630 --> 00:11:39.859
Lion Prado: Begin with, no close, close everything.

143
00:11:40.090 --> 00:11:42.669
Lion Prado: and try try installing it all.

144
00:11:42.830 --> 00:11:46.710
Lion Prado: Administrator. If you already have it installed, it will show.

145
00:11:47.420 --> 00:11:48.570
Sam Edem: Jesus. Christ.

146
00:11:50.100 --> 00:11:50.835
Sam Edem: Okay.

147
00:11:55.830 --> 00:11:58.430
Lion Prado: Any other window user who have it installed.

148
00:12:00.090 --> 00:12:01.999
LAWRENCE APPIAH-NUAMAH: Yeah, yeah, I have it. I have it installed.

149
00:12:04.820 --> 00:12:06.629
Lion Prado: I think our time is ruined.

150
00:12:17.790 --> 00:12:19.510
Sam Edem: And I run yesterday.

151
00:12:22.660 --> 00:12:27.539
Lion Prado: Then try installing Wsl, then Space Icon.

152
00:12:33.680 --> 00:12:39.310
Sam Edem: So I don't know if you could drop exactly what you want me to put in in the chat box.

153
00:12:39.920 --> 00:12:41.030
Lion Prado: I'm typing.

154
00:12:41.580 --> 00:12:42.440
Sam Edem: Okay.

155
00:12:45.660 --> 00:12:46.270
Lion Prado: Thanks.

156
00:12:51.610 --> 00:12:53.140
Sam Edem: So let's going.

157
00:12:55.580 --> 00:12:59.134
AMO: Sorry are we all expected to.

158
00:13:07.950 --> 00:13:09.160
AMO: great hurry.

159
00:13:09.552 --> 00:13:14.529
Lion Prado: Guys, what do you think the problem should be with your machine?

160
00:13:14.530 --> 00:13:16.239
LAWRENCE APPIAH-NUAMAH: Thinking you should try restarting.

161
00:13:16.668 --> 00:13:18.809
Lion Prado: Yeah, I think it's true.

162
00:13:18.950 --> 00:13:20.070
Lion Prado: It's no one.

163
00:13:22.780 --> 00:13:23.950
LAWRENCE APPIAH-NUAMAH: Daisano.

164
00:13:25.760 --> 00:13:27.740
Sam Edem: So, please. I didn't get that.

165
00:13:27.960 --> 00:13:28.980
LAWRENCE APPIAH-NUAMAH: That's that's.

166
00:13:29.330 --> 00:13:33.280
Lion Prado: It is dash, dash, install! Not just one dash. It's a double dash.

167
00:13:33.800 --> 00:13:36.140
Sam Edem: Okay, W.

168
00:13:36.360 --> 00:13:40.090
Sam Edem: SO, dash, dash, install.

169
00:13:40.090 --> 00:13:41.940
Lion Prado: No, you leave a space before that.

170
00:13:43.030 --> 00:13:44.180
Sam Edem: I use the word.

171
00:13:45.930 --> 00:13:48.789
Lion Prado: You leave a space before the dash, dash.

172
00:13:49.920 --> 00:13:50.990
Sam Edem: Full key.

173
00:14:01.630 --> 00:14:09.789
Sam Edem: It's still hope you are. So dash, dash, install. Oh.

174
00:14:15.760 --> 00:14:16.700
Sam Edem: okay.

175
00:14:18.000 --> 00:14:20.130
Sam Edem: Looks like something's loading.

176
00:14:30.620 --> 00:14:31.790
Lion Prado: Nothing happened.

177
00:14:34.220 --> 00:14:43.229
Lion Prado: Probably to be just you. You can have it, and probably your system is just failing to call it based on the canal. It has gone to high.

178
00:14:46.040 --> 00:14:49.290
Lion Prado: so you can restart your machine like someone.

179
00:14:49.410 --> 00:14:54.169
Sam Edem: Resolve this because I really need to put on to participate in.

180
00:14:54.840 --> 00:15:00.380
Sam Edem: Oh, God, okay, alright. So let me stop sharing my screen. So some.

181
00:15:00.380 --> 00:15:02.809
Lion Prado: Yeah, so and restart your machine.

182
00:15:04.920 --> 00:15:06.780
Sam Edem: No problem. Thank you.

183
00:15:07.710 --> 00:15:10.520
Lion Prado: I'll confirm, Lawrence. You can wire.

184
00:15:15.560 --> 00:15:17.670
LAWRENCE APPIAH-NUAMAH: I have sent a request. So

185
00:15:26.560 --> 00:15:33.410
LAWRENCE APPIAH-NUAMAH: okay, so I think, can you see my screen now?

186
00:15:34.490 --> 00:15:35.620
Lion Prado: Yeah, you can see.

187
00:15:36.710 --> 00:15:44.680
LAWRENCE APPIAH-NUAMAH: Alright, alright! So okay, let me let me close this

188
00:15:46.980 --> 00:15:50.009
LAWRENCE APPIAH-NUAMAH: alright. So you said we should create a a package right.

189
00:15:50.520 --> 00:15:58.020
Lion Prado: Yeah, so don't organize your code.

190
00:15:58.330 --> 00:15:59.380
Lion Prado: Resume.

191
00:16:01.200 --> 00:16:02.620
LAWRENCE APPIAH-NUAMAH: Okay, so.

192
00:16:02.620 --> 00:16:06.696
Lion Prado: Use con is control plus just use.

193
00:16:07.000 --> 00:16:09.419
LAWRENCE APPIAH-NUAMAH: I was, okay. Control price. Okay.

194
00:16:11.083 --> 00:16:14.820
LAWRENCE APPIAH-NUAMAH: it's not working on a parcel. So let me use.

195
00:16:21.460 --> 00:16:24.490
LAWRENCE APPIAH-NUAMAH: Okay? Oh, let me increase it further.

196
00:16:27.390 --> 00:16:29.009
Lion Prado: Oh, it's okay. It's okay. It's okay.

197
00:16:34.582 --> 00:16:38.200
Lion Prado: so create create a directory and name it discount.

198
00:16:39.750 --> 00:16:43.720
LAWRENCE APPIAH-NUAMAH: Okay. Boots. Come.

199
00:16:47.990 --> 00:16:54.239
Lion Prado: Then that's good. That's so. Anytime you want to run it on vs, with open.

200
00:16:54.430 --> 00:16:55.480
Lion Prado: Yeah?

201
00:16:55.930 --> 00:17:02.289
Lion Prado: Oh, I feel, I say, and and open your Wsl. And run it and open your

202
00:17:04.829 --> 00:17:08.859
Lion Prado: and always booking your Vs code on top of the Wsl.

203
00:17:12.530 --> 00:17:15.280
Lion Prado: Once you do that you can, you'll be able to run

204
00:17:15.910 --> 00:17:18.780
Lion Prado: your call speed from the terminal value.

205
00:17:20.730 --> 00:17:23.550
Lion Prado: So so he has good.

206
00:17:23.670 --> 00:17:27.349
Lion Prado: The Vsr. Will go with a ui of Vs code on on top of it.

207
00:17:27.640 --> 00:17:29.939
Lion Prado: So this particular year is good.

208
00:17:30.210 --> 00:17:35.410
Lion Prado: That you are seeing right now is different from the normal vs, open from your machine.

209
00:17:35.570 --> 00:17:39.089
Lion Prado: But this Vs code is being opened on top of Wsl.

210
00:17:40.180 --> 00:17:46.100
Lion Prado: so it then actually the demo I just wanted to do. Now, if you're on windows, and anytime you want to

211
00:17:46.430 --> 00:17:51.280
Lion Prado: and run, or they move, always open it on top of wso

212
00:17:51.630 --> 00:18:00.469
Lion Prado: by creating a folder after you go into the folder, then use the code. If you don't have the Vs code installed in on top of

213
00:18:02.270 --> 00:18:13.150
Lion Prado: it will automatically install it for me before you. Actually, this was the demo I wanted to hope I'm clear right.

214
00:18:14.580 --> 00:18:17.820
LAWRENCE APPIAH-NUAMAH: Yeah, yeah, yes, sir.

215
00:18:18.670 --> 00:18:19.899
Lion Prado: Alright. Thank you, Samuel.

216
00:18:20.270 --> 00:18:23.190
Lion Prado: Okay, then, Kyle, you can go on with your question.

217
00:18:24.760 --> 00:18:25.190
LAWRENCE APPIAH-NUAMAH: Okay?

218
00:18:25.190 --> 00:18:25.540
LAWRENCE APPIAH-NUAMAH: Yourself.

219
00:18:26.790 --> 00:18:34.161
ITPenkrah: I have Vs code installed right on the Whatsapp group. I saw that someone posted that you're supposed to

220
00:18:34.660 --> 00:18:37.750
ITPenkrah: install visual studio installer?

221
00:18:38.090 --> 00:18:39.860
ITPenkrah: Is it the same thing.

222
00:18:41.760 --> 00:18:47.949
Lion Prado: I don't know me. Easiest food I use. I never made mention of any other. This one easiest.

223
00:18:52.070 --> 00:18:52.830
ITPenkrah: Q.

224
00:18:53.030 --> 00:18:57.640
Sam Edem: So if I don't have Vs code installed, it means I can't run it.

225
00:18:57.960 --> 00:19:01.750
LAWRENCE APPIAH-NUAMAH: Yeah, you can use eclipse, cool.

226
00:19:01.750 --> 00:19:05.109
Lion Prado: Yeah, I think the best, but the the best is to use Esp.

227
00:19:10.810 --> 00:19:15.439
Lion Prado: If you don't have Vs code installed, you can't write. Your code Vs code is the Id

228
00:19:17.400 --> 00:19:25.130
Lion Prado: where you write your movie, yeah, term line is just.

229
00:19:26.160 --> 00:19:27.999
Lion Prado: But here's good is the Id.

230
00:19:31.030 --> 00:19:34.380
Sam Edem: So please drop the link for download.

231
00:19:38.500 --> 00:19:40.030
LAWRENCE APPIAH-NUAMAH: Downloading Vs code.

232
00:19:40.680 --> 00:19:41.160
Lion Prado: Yeah.

233
00:19:43.150 --> 00:19:46.789
LAWRENCE APPIAH-NUAMAH: Okay. What windows are you on windows?

234
00:19:48.480 --> 00:19:49.660
Lion Prado: Yeah, he's on English.

235
00:19:51.050 --> 00:19:54.549
LAWRENCE APPIAH-NUAMAH: I think you can go to this site. Let me win this.

236
00:19:55.800 --> 00:19:57.829
LAWRENCE APPIAH-NUAMAH: Where do you select?

237
00:19:58.727 --> 00:20:01.110
LAWRENCE APPIAH-NUAMAH: You can download for windows. So let me.

238
00:20:01.270 --> 00:20:02.720
LAWRENCE APPIAH-NUAMAH: We copy this.

239
00:20:03.990 --> 00:20:04.920
Sam Edem: Oh!

240
00:20:05.870 --> 00:20:12.010
LAWRENCE APPIAH-NUAMAH: Oh, then wait.

241
00:20:13.100 --> 00:20:17.569
Sam Edem: Give me a moment. Give me a moment happening in class.

242
00:20:18.300 --> 00:20:19.290
Lion Prado: 6, 6.

243
00:20:20.290 --> 00:20:25.560
Sam Edem: Yeah, I'm with you. I'm with you, sir, I'm saying, drop the link.

244
00:20:25.560 --> 00:20:26.619
AMO: Ask the question.

245
00:20:27.440 --> 00:20:30.369
Lion Prado: Drop, drop the link in the zoom, chat in the zoom, chat.

246
00:20:30.370 --> 00:20:32.509
LAWRENCE APPIAH-NUAMAH: The zoom chat as well. Okay.

247
00:20:32.640 --> 00:20:33.640
LAWRENCE APPIAH-NUAMAH: See?

248
00:20:34.880 --> 00:20:35.670
LAWRENCE APPIAH-NUAMAH: Cool.

249
00:20:37.560 --> 00:20:40.629
Sam Edem: Okay, well, I'm trying to restart my system.

250
00:20:42.010 --> 00:20:45.490
Sam Edem: Okay, let's see.

251
00:20:54.050 --> 00:20:58.789
Lion Prado: Alright so let let me continue with what we have today. So, Lawrence, thank you very much.

252
00:21:02.560 --> 00:21:03.820
LAWRENCE APPIAH-NUAMAH: You're welcome.

253
00:21:10.960 --> 00:21:14.659
Lion Prado: So like I mentioned earlier today, I'm going to focus on something that

254
00:21:14.940 --> 00:21:16.939
Lion Prado: you will use. We will meet everywhere

255
00:21:17.830 --> 00:21:20.199
Lion Prado: what you're going to do today. You meet everywhere

256
00:21:22.100 --> 00:21:25.219
Lion Prado: in any programming languages. You think they're going to make it

257
00:21:39.670 --> 00:21:41.350
Lion Prado: hope. You guys see my screen.

258
00:21:43.510 --> 00:21:44.130
Mr Douglas Amoo-Sargon: Yes, we can.

259
00:21:49.280 --> 00:21:51.339
Lion Prado: Telling me if I sound tired

260
00:22:07.430 --> 00:22:10.569
Lion Prado: recording in progress progress.

261
00:22:31.940 --> 00:22:32.830
Lion Prado: It's okay.

262
00:22:32.830 --> 00:22:34.340
LION PRADO: We are going to focus on it.

263
00:22:35.200 --> 00:22:36.309
Lion Prado: This is a whole

264
00:22:41.410 --> 00:22:44.959
Lion Prado: which is about focusing on programming

265
00:22:45.610 --> 00:22:47.560
Lion Prado: and data types and other stuff.

266
00:22:52.460 --> 00:22:55.949
Lion Prado: So I'll focus on the fundamental programming concepts more

267
00:22:56.110 --> 00:23:02.549
Lion Prado: that beginners, you understand. So you do. You go about with some clear code examples?

268
00:23:02.910 --> 00:23:06.610
Lion Prado: Yeah. So I'm going to create a new new package for that

269
00:23:07.420 --> 00:23:11.810
Lion Prado: alright. I think I did this in, and I didn't write anything, so let me use it.

270
00:23:22.190 --> 00:23:26.079
Lion Prado: So yes, and we are going to start.

271
00:23:26.290 --> 00:23:33.989
Lion Prado: And for building block, which is a drivers in data types. So any programming language or any application that we are seeing.

272
00:23:34.260 --> 00:23:39.090
Lion Prado: The core building blocks which is which are involving them is variables in the data type.

273
00:23:39.190 --> 00:23:45.700
Lion Prado: So if you say variables what are variables so virus.

274
00:23:45.960 --> 00:23:52.559
Lion Prado: let us assign, or let us for stuff into a container

275
00:24:01.110 --> 00:24:02.420
Lion Prado: united items.

276
00:24:04.060 --> 00:24:06.400
Lion Prado: Let me see this a container.

277
00:24:09.000 --> 00:24:11.460
Lion Prado: So we will. And and this Spontina.

278
00:24:14.410 --> 00:24:19.190
Lion Prado: it's a it's a variable that will allow us to store something inside.

279
00:24:19.460 --> 00:24:25.769
Lion Prado: So we inside this container, let me see. Container. This container is here.

280
00:24:28.990 --> 00:24:31.840
Lion Prado: Difficulty right? And inside the I'm sorry one.

281
00:24:32.010 --> 00:24:41.080
Lion Prado: Hi Kyle, container D, and inside Container B, I'm storing a name called

282
00:24:43.100 --> 00:24:46.339
Lion Prado: a limb called poofy like that.

283
00:24:46.470 --> 00:24:47.720
Lion Prado: And I'm called.

284
00:24:59.980 --> 00:25:01.810
Lion Prado: basically, that's what the variable is.

285
00:25:01.930 --> 00:25:08.820
Lion Prado: So they we remove. We declare variable using the let's keyword. So if I want to declare variable, I start it.

286
00:25:09.410 --> 00:25:12.350
Lion Prado: Let's let me see.

287
00:25:13.376 --> 00:25:16.600
Lion Prado: Let's you, too. Yeah.

288
00:25:17.130 --> 00:25:18.440
Lion Prado: Then, after that

289
00:25:23.150 --> 00:25:36.259
Lion Prado: I I state the integer so like we have seen over here. So I've declared an integer of an unsigned integer of uses before so anytime we declare an integer we are supposed to.

290
00:25:37.070 --> 00:25:47.450
Lion Prado: It's state, it's data type or something. So I'm trying to. So once I've deployed this new feature.

291
00:25:47.720 --> 00:25:50.380
Lion Prado: this uses the voice meeting. So

292
00:25:50.670 --> 00:25:57.620
Lion Prado: yeah, move compiler. That is an integer. It's not necessary to bring integer over here. So let's so let me see, let's

293
00:25:58.290 --> 00:26:12.600
Lion Prado: number so number uses the voice equal to 0, meaning, I am storing 0 inside a number. So anytime I call number number is going to output 0 to me. So that's how we flavorable

294
00:26:14.660 --> 00:26:19.080
Lion Prado: and the type of location like I mentioned anytime, we we declare

295
00:26:19.270 --> 00:26:22.729
Lion Prado: this is the type and location of it. So this, what is going to tell

296
00:26:22.900 --> 00:26:27.784
Lion Prado: the move compiler that the type of variable you are trying to deploy. So we have

297
00:26:28.800 --> 00:26:35.110
Lion Prado: guys like, we have the integer yeah screen.

298
00:26:37.950 --> 00:26:42.680
Lion Prado: We have the moon, we have address, we have vector

299
00:26:44.100 --> 00:26:56.490
Lion Prado: yeah, so these are some of the common types that will be coming across inside. So anytime, you are declaring. But integers, you don't write integer. The type of notation for integer is

300
00:26:56.700 --> 00:26:58.170
Lion Prado: yeah, you.

301
00:26:58.520 --> 00:27:06.100
Lion Prado: it's using. Hope you can see my screen. Yeah, we have the U. 64 U. 16, u, 2, 5, 6, u, 32.

302
00:27:06.250 --> 00:27:13.740
Lion Prado: And then you if, hey you are seeing this because I have this extension installed, which is called.

303
00:27:14.790 --> 00:27:22.070
Lion Prado: But I that's the next initiative is for M. Trees, Mbaga.

304
00:27:24.220 --> 00:27:26.970
Lion Prado: and they move since. And there's 1 called

305
00:27:27.500 --> 00:27:34.549
Lion Prado: Move Steam of Analyzer. And this particular one sea move. Analyzer, this will help you to debug your food easily.

306
00:27:38.530 --> 00:27:42.010
Lion Prado: It is how to declare bubbles move.

307
00:27:43.540 --> 00:27:55.070
Lion Prado: And also, when we declare a variable default. Yeah, usable by default, meaning once this variable that declared over here later in my code I cannot go, and

308
00:27:57.140 --> 00:27:58.480
Lion Prado: the time I could.

309
00:27:58.610 --> 00:28:03.709
Lion Prado: I cannot come and declare a number again, and say, Let's now.

310
00:28:04.990 --> 00:28:25.159
Lion Prado: and I'll assign a new number as 6 later in my code, if I try to declare something like this is going to show an error, because by default, this thing I've declared over here is mutable meaning. I cannot change if I want to change this, and probably some part somewhere in the code. When I'm declaring this variable, I'm supposed to add

311
00:28:25.310 --> 00:28:31.689
Lion Prado: news to it once I add news to it, meaning later in the code. If I I do this.

312
00:28:31.850 --> 00:28:37.330
Lion Prado: it's it's going to be acceptable by the moment. I don't add this usable keyword. It's not acceptable.

313
00:28:49.400 --> 00:28:58.770
Lion Prado: Let let me declare some more types. Let's number 2 super awesome, you 32.

314
00:29:02.070 --> 00:29:17.229
Lion Prado: And also we have millions. So millions represents 2 or 4 or one or 2. So probably let's say you're writing an application, and the application you are writing requires 2 or 4 something, so let me say.

315
00:29:18.380 --> 00:29:34.319
Lion Prado: and private and not private, you can assign Boolean value to something like that. So let me say you are writing application. You try something to be private, and something should be public. So with that you can assign a Boolean value to let, I would say, Let's Boolean.

316
00:29:35.610 --> 00:29:39.940
Lion Prado: So let's ribings.

317
00:29:42.430 --> 00:29:49.300
Lion Prado: Let's private, which is a moon is equal to is equal to 3.

318
00:29:50.240 --> 00:29:54.199
Lion Prado: You get it and let public probably next.

319
00:29:55.510 --> 00:29:59.189
Lion Prado: Oh, Blake, this is a rule it's equal to false.

320
00:29:59.490 --> 00:30:05.749
Lion Prado: So this is how we can make use of wood in our code. The wool is just to declare you or force of a value.

321
00:30:05.890 --> 00:30:12.049
Lion Prado: And also we have the address type. And how do we declare? Address this? How we, we declare, address?

322
00:30:12.540 --> 00:30:16.310
Lion Prado: No, so we always use a let's us.

323
00:30:16.970 --> 00:30:19.599
Lion Prado: You always use the late keyword to address. So let's

324
00:30:23.760 --> 00:30:25.170
Lion Prado: to let address.

325
00:30:25.350 --> 00:30:28.500
Lion Prado: And he states they type annotation.

326
00:30:28.850 --> 00:30:37.090
Lion Prado: release the type of notation which is addressed. Release type annotation is what tells the compiler. That is the particular data type that trying to display.

327
00:30:37.480 --> 00:30:44.510
Lion Prado: Right? You see, in other languages they are silent in Python. You can just go ahead, and you can just declare number

328
00:30:44.750 --> 00:30:53.090
Lion Prado: next name, because we'll see.

329
00:30:53.610 --> 00:31:01.090
Lion Prado: and probably to work by move. It's not going to. We have to see that the name is what

330
00:31:02.360 --> 00:31:03.620
Lion Prado: this spring.

331
00:31:05.040 --> 00:31:08.999
Lion Prado: So that's the difference. So we always keep their type and location.

332
00:31:12.750 --> 00:31:16.410
Lion Prado: And also the next thing you are going to to clear.

333
00:31:20.700 --> 00:31:25.400
Lion Prado: but at least sometimes sometimes for for some phone numbers like

334
00:31:26.291 --> 00:31:33.650
Lion Prado: this number. Sometimes the compiler er can do that. Oh, if you skip this.

335
00:31:35.780 --> 00:31:45.580
Lion Prado: the compiler is going to assume this as a Boolean, and let me say, probably you are. You are assuming it as as a string. The compiler is going to assume this.

336
00:31:45.910 --> 00:31:48.849
Lion Prado: Yes, and same applies to this. Let me see

337
00:31:49.550 --> 00:31:57.660
Lion Prado: you skip this, and probably you are storing this. You want to store 0. The compiler is automatically going to see this

338
00:31:57.850 --> 00:31:59.160
Lion Prado: assign it to. Yeah.

339
00:32:00.890 --> 00:32:02.149
Lion Prado: Hope I'm clear on this.

340
00:32:05.740 --> 00:32:06.689
DC ABLORH: Yes, you are.

341
00:32:06.860 --> 00:32:07.470
LAWRENCE APPIAH-NUAMAH: Yeah.

342
00:32:15.990 --> 00:32:16.880
Benefit girl: Oh!

343
00:32:20.550 --> 00:32:21.790
Lion Prado: Are you asking a question.

344
00:32:23.490 --> 00:32:25.000
Benefit girl: Hello! Hi! I'm.

345
00:32:27.180 --> 00:32:28.299
Lion Prado: Yeah, I can't hear you

346
00:32:32.490 --> 00:32:33.220
Lion Prado: kindly.

347
00:32:33.220 --> 00:32:36.930
jammi: A la lion Prade.

348
00:32:40.550 --> 00:32:43.840
Lion Prado: Are you benefits? Are you asking a question.

349
00:32:43.840 --> 00:32:50.949
Benefit girl: Okay? Oh, yeah, where you declared. You just suggest something. Now that in move.

350
00:32:51.570 --> 00:32:57.569
Benefit girl: if you want to declare a variable, you have to like stage the type do you get

351
00:32:57.700 --> 00:33:07.189
Benefit girl: but this one? Now? You said you cancelled the type from you. I think it was you 64 that you said for so like you said, that is an unsigned in.

352
00:33:07.420 --> 00:33:08.859
Benefit girl: So now.

353
00:33:09.060 --> 00:33:21.180
Benefit girl: if you show how we declare in Python, and how I compare, but for this, let number equals 0. Is it still right to declare it like this? Because you said it's still going to recognize it as an integer.

354
00:33:22.670 --> 00:33:29.179
Lion Prado: No, and I may something. Yeah, I give a question. And I was like, probably

355
00:33:29.310 --> 00:33:31.160
Lion Prado: trying to do something like this.

356
00:33:31.340 --> 00:33:37.240
Lion Prado: But if you in your head. You are trying to install 0 as a string. You get something.

357
00:33:37.870 --> 00:33:40.720
Lion Prado: the attendees and store it as a screen.

358
00:33:41.130 --> 00:33:52.610
Lion Prado: and probably you forget to state the type of location that is a string, and it just declared this way automatically. The compiler is going to see it as a as a number as an integer.

359
00:33:53.160 --> 00:33:54.060
Lion Prado: You get it.

360
00:33:56.390 --> 00:34:03.190
Benefit girl: So, even assuming you want to declare that a string, you know, string is like sequence of characters.

361
00:34:03.930 --> 00:34:04.280
Lion Prado: Yeah.

362
00:34:04.280 --> 00:34:05.030
Benefit girl: Right.

363
00:34:05.970 --> 00:34:08.250
Benefit girl: So if you want to declare it as a string.

364
00:34:09.380 --> 00:34:15.120
Benefit girl: did you compile a seat like this as a string because you didn't have any treat.

365
00:34:18.530 --> 00:34:22.690
Lion Prado: So that the that's the reason why it's so easy to get identified.

366
00:34:23.679 --> 00:34:30.650
Lion Prado: probably in your in your head if you

367
00:34:30.850 --> 00:34:33.290
Lion Prado: and don't do it the 1st week

368
00:34:33.814 --> 00:34:41.280
Lion Prado: I was just pressing on the number. That's how the compiler is going to see, but it is always better to add a

369
00:34:41.540 --> 00:34:42.939
Lion Prado: type annotation to me.

370
00:34:44.350 --> 00:34:46.799
Benefit girl: Okay, I get it now, thank you.

371
00:34:47.659 --> 00:34:51.869
Lion Prado: Oh, and to provide reassignment. So let me see.

372
00:34:55.809 --> 00:35:08.139
Lion Prado: I have this variable now. So because I've added this over here somewhere in the code. I can reassign number to a different number. So over here, number is A, You

373
00:35:08.339 --> 00:35:19.049
Lion Prado: U 8 integer unsigned integer. And I'm I'm storing. I'm using number to store 5, meaning anywhere I call

374
00:35:19.159 --> 00:35:19.849
Lion Prado: right.

375
00:35:20.009 --> 00:35:24.389
Lion Prado: But because I've added users over here meaning I can reassign a different

376
00:35:24.499 --> 00:35:30.199
Lion Prado: variable cigarettes, so I can just in my foot. Just go on and see.

377
00:35:30.319 --> 00:35:35.819
Lion Prado: Now, because you think this this is going to work because the compiler

378
00:35:35.959 --> 00:35:44.309
Lion Prado: we reach this line before here because there's multiple value. The compiler will now know that. Okay, he's trying to change the number online, 25

379
00:35:45.099 --> 00:35:58.359
Lion Prado: to 10 now, so these are the you know that you reassign a value to a variable later. You're supposed to add a mutable keyword to it.

380
00:36:02.190 --> 00:36:05.140
DC ABLORH: Yeah, no, I have a question. Can you hear me?

381
00:36:06.290 --> 00:36:07.080
Lion Prado: Hi! Can you.

382
00:36:07.770 --> 00:36:15.090
DC ABLORH: Okay? So I believe, the U inches on sign integer, that will be for posted numbers. Am I right?

383
00:36:17.050 --> 00:36:19.870
Lion Prado: Yeah, yeah, it's only positive numbers, no negative numbers.

384
00:36:20.480 --> 00:36:23.740
DC ABLORH: Okay, so how do you use to store negative numbers?

385
00:36:25.255 --> 00:36:28.510
Lion Prado: I would say, it's not possible. We don't store any numbers.

386
00:36:29.420 --> 00:36:34.309
Lion Prado: If you even run, test your code. And there's a negative code, your code will break.

387
00:36:35.320 --> 00:36:36.230
DC ABLORH: Oh, okay.

388
00:36:36.960 --> 00:36:39.199
Lion Prado: Let me say it to you. So I will put you.

389
00:36:50.190 --> 00:36:57.159
Lion Prado: We see this subtract and subtract subtracting A and B, right?

390
00:36:58.800 --> 00:37:05.439
Lion Prado: So I'm going to input a code that's going to give us a negative number and test it. To see the code will break.

391
00:37:06.200 --> 00:37:09.679
Lion Prado: The name of the function is subtract increase.

392
00:37:09.810 --> 00:37:12.920
Lion Prado: So I'll come over here captured entries.

393
00:37:13.050 --> 00:37:17.210
Lion Prado: I'm going to make B bigger than A, I'm going to make B.

394
00:37:17.730 --> 00:37:21.630
Lion Prado: Whoa and civics.

395
00:37:28.580 --> 00:37:31.430
Lion Prado: that's add you'll see the app.

396
00:37:33.000 --> 00:37:34.409
Lion Prado: Then it's 3.

397
00:37:35.950 --> 00:37:43.430
Lion Prado: Oh, yes, they see the good as a booking, right? You can see.

398
00:37:45.100 --> 00:37:46.300
Lion Prado: So it doesn't.

399
00:37:46.300 --> 00:37:47.910
DC ABLORH: There's a little tab arrow.

400
00:37:48.010 --> 00:37:48.780
DC ABLORH: Okay.

401
00:37:49.540 --> 00:37:50.230
Lion Prado: Hello!

402
00:37:54.360 --> 00:38:00.110
Lion Prado: By the moment I make this number list, then I've made it one, and I run the hood.

403
00:38:02.450 --> 00:38:03.870
Lion Prado: Iran is good

404
00:38:08.440 --> 00:38:09.680
Lion Prado: still, webinar.

405
00:38:10.560 --> 00:38:12.060
Lion Prado: They see it as right now.

406
00:38:12.240 --> 00:38:14.010
Lion Prado: Yeah, this was perfectly, yeah.

407
00:38:21.470 --> 00:38:22.729
Lion Prado: Go back and move on.

408
00:38:25.190 --> 00:38:26.140
DC ABLORH: Yes. Please. Yeah.

409
00:38:26.140 --> 00:38:27.110
Lion Prado: All right.

410
00:38:27.640 --> 00:38:28.410
DC ABLORH: Yes, sir.

411
00:38:29.520 --> 00:38:55.099
Lion Prado: Yes, and what I did was variable and declaration. And what variable is a container for storing and stuff. So anytime you're declaring a variable. You always start with a let, and the name of the variable and the variable annotation and the value are assigning to the to the variable. So that's how it works. And anytime you want to deploy a variable that you know. Later in your code you reassign something you always have to add a mutable.

412
00:38:57.090 --> 00:38:58.630
Lion Prado: So now I'm moving

413
00:38:58.780 --> 00:39:09.710
Lion Prado: to some basic and control flow in in the move language. So I'm going to create some arithmetic integration. So we are going to create a

414
00:39:10.220 --> 00:39:12.119
Lion Prado: let's display some variables.

415
00:39:13.300 --> 00:39:14.239
Lion Prado: Let's go down.

416
00:39:15.415 --> 00:39:15.850
DC ABLORH: Hello!

417
00:39:18.490 --> 00:39:19.100
Sophylon: Yeah.

418
00:39:19.100 --> 00:39:24.770
DC ABLORH: Yeah, please, do. You did not talk about the vector, ux.

419
00:39:26.940 --> 00:39:27.500
Lion Prado: Yeah.

420
00:39:27.500 --> 00:39:28.860
Sophylon: Events. Are you using.

421
00:39:29.729 --> 00:39:39.010
Lion Prado: And it's also used for strings. So you don't have strings move beyond Philippines.

422
00:39:39.200 --> 00:39:52.250
Lion Prado: like how on a program language, you can just requesting we don't have strings, you have to import things and probably pass we pass through. And also sometimes we use a very

423
00:39:52.495 --> 00:39:52.740
Lion Prado: bye.

424
00:39:57.700 --> 00:39:58.200
DC ABLORH: Oh, okay.

425
00:39:58.200 --> 00:40:00.649
Lion Prado: So how how is we use Iris?

426
00:40:00.830 --> 00:40:03.540
Lion Prado: Another program language, that's all for examines.

427
00:40:04.484 --> 00:40:04.769
DC ABLORH: Okay.

428
00:40:06.280 --> 00:40:07.179
Sophylon: That we can.

429
00:40:08.980 --> 00:40:11.580
Benefit girl: So. Hello! Sorry I have a question.

430
00:40:12.700 --> 00:40:15.240
Sophylon: Okay, can you.

431
00:40:15.240 --> 00:40:16.639
Lion Prado: Yeah, yeah. I'm listening.

432
00:40:17.700 --> 00:40:21.500
Benefit girl: Okay. So the way we declared we are assigned.

433
00:40:22.100 --> 00:40:32.030
Benefit girl: Sorry, the hey? I'll try to see this. So you know, let's mute number. We know, this is an integer already. So what we want to describe a string in

434
00:40:32.170 --> 00:40:35.600
Benefit girl: we've replaced U 8 with vector

435
00:40:35.850 --> 00:40:39.219
Benefit girl: you is right, then we assign maybe like

436
00:40:39.650 --> 00:40:54.190
Benefit girl: a name. Maybe, let's say, once declare a name, a name is a string, so let's declare a name and everything, and we assign. So instead of the U 8, we are going to use vector, v, vector, u, 8,

437
00:40:54.570 --> 00:40:56.460
Benefit girl: to declare it. You get it.

438
00:40:58.630 --> 00:41:00.389
Lion Prado: Hope you are explaining to the person right.

439
00:41:02.390 --> 00:41:02.820
Benefit girl: No.

440
00:41:02.820 --> 00:41:04.099
Lion Prado: I'm trying to think.

441
00:41:05.256 --> 00:41:06.599
Lion Prado: Ask me a question.

442
00:41:06.600 --> 00:41:07.190
Sophylon: Oops!

443
00:41:08.480 --> 00:41:09.260
Benefit girl: Okay.

444
00:41:09.550 --> 00:41:16.840
Benefit girl: I want you to like, go back to the code that the place that you declared the variable. I want to figure out something.

445
00:41:18.530 --> 00:41:20.270
Benefit girl: Okay? Yeah.

446
00:41:20.860 --> 00:41:29.260
Benefit girl: The the place you said variable reassignment. Okay, let's say you want like, declare a string.

447
00:41:29.440 --> 00:41:31.490
YounG Eli: One day, street.

448
00:41:31.490 --> 00:41:39.460
Benefit girl: We are going to replace. So we're not going to use drink. We are going to where where you it was used to declare the.

449
00:41:39.888 --> 00:41:41.599
Lion Prado: Yeah, yeah, yeah, exactly.

450
00:41:42.080 --> 00:41:42.560
YounG Eli: Thoughts.

451
00:41:42.560 --> 00:41:44.400
Lion Prado: And they start using.

452
00:41:44.930 --> 00:41:45.310
YounG Eli: Yes.

453
00:41:46.610 --> 00:41:49.647
Lion Prado: But before, and this is because, you see,

454
00:41:52.160 --> 00:41:54.780
YounG Eli: Oh, yeah, someone is.

455
00:42:07.250 --> 00:42:08.139
Lion Prado: The person you can.

456
00:42:17.820 --> 00:42:19.870
YounG Eli: Hey? Please meet our young girl.

457
00:42:23.860 --> 00:42:24.740
Chemist: Oh!

458
00:42:26.980 --> 00:42:27.950
Sophylon: Good night.

459
00:42:35.800 --> 00:42:37.639
Lion Prado: Yeah, I think it is is.

460
00:42:38.380 --> 00:42:41.660
Lion Prado: Yeah. Please do your answer. Please ask your questions.

461
00:42:41.830 --> 00:42:42.899
Lion Prado: How did that person.

462
00:42:43.770 --> 00:42:45.007
Godfred Addai Amoako: Oh, okay, okay.

463
00:42:45.950 --> 00:42:54.209
Godfred Addai Amoako: lion. I just wanted to highlight on the string part. Right? I don't know much about the move language, but I'm coming from a rust background.

464
00:42:54.500 --> 00:43:17.079
Godfred Addai Amoako: right? So I think that the reason why they moved language is not having the string data sets that probably is to make it fast is because on the computational background, like after it's been done in binary, especially in rust and other ones, and prints and messages become very, very expensive. So even in Solana.

465
00:43:17.300 --> 00:43:23.229
Godfred Addai Amoako: even if they have to use string, they change it to use a data set called message, of which they

466
00:43:23.410 --> 00:43:33.560
Godfred Addai Amoako: do that through vects. So I think that's why it makes 3 very, very fast to avoid the string and conditional charges they have to use. Probably vectors.

467
00:43:38.420 --> 00:43:43.329
Lion Prado: To a you see this code. So anytime you want to use them.

468
00:43:43.830 --> 00:43:47.280
Lion Prado: The importance from the Standard Library Book you are seeing this line right.

469
00:43:47.500 --> 00:43:48.280
Ralph Mensah: Hello!

470
00:43:49.140 --> 00:43:50.170
Lion Prado: Yeah. Hello.

471
00:43:50.170 --> 00:43:51.829
Ralph Mensah: Hey! My heart is in.

472
00:43:52.800 --> 00:43:57.620
Lion Prado: Oh, yeah. I told you I mentioned earlier.

473
00:43:58.020 --> 00:44:08.889
Ralph Mensah: Oh, okay, I didn't hear. So my question is, do. Do we always have to assign assign when you are initializing a variable.

474
00:44:09.670 --> 00:44:11.480
Lion Prado: That's the type annotation, right?

475
00:44:11.790 --> 00:44:13.330
Ralph Mensah: Yeah, like, when.

476
00:44:13.330 --> 00:44:13.979
Lion Prado: Yeah, yeah.

477
00:44:13.980 --> 00:44:33.969
Ralph Mensah: Signing, not a type. But then, when you are assigning, I see you always assign to maybe 0 like a number to 0. Right. Can you do one without having like 0 day without assigning anything to it, and then probably use the mutable to change it later on?

478
00:44:34.900 --> 00:44:36.280
Lion Prado: Yeah, exactly. You can't do that.

479
00:44:38.290 --> 00:44:39.640
Lion Prado: Yes, we can do that.

480
00:44:42.110 --> 00:44:42.660
Sophylon: Yeah.

481
00:44:44.590 --> 00:44:52.549
Lion Prado: So I've not got into space, but because you are asking questions. I want to show how this is.

482
00:44:53.420 --> 00:44:54.880
DavidXM : So yes.

483
00:44:54.880 --> 00:44:58.549
Lion Prado: Anytime. You want to use things. You have to import this from the Standard Library.

484
00:44:58.880 --> 00:45:12.159
Lion Prado: So when you deploy your stack, you can pass it over a screen over here to work by the moment you are trying to create. This data type over here. What you've done is we just created a custom data type. By the moment we want to.

485
00:45:12.160 --> 00:45:12.670
Sophylon: People.

486
00:45:12.670 --> 00:45:15.110
Lion Prado: And make it a little less.

487
00:45:15.420 --> 00:45:20.320
Lion Prado: Let's this, let's this charity registered before to this.

488
00:45:20.510 --> 00:45:25.319
Lion Prado: And when we get to you, we can pass vector. U 8.

489
00:45:25.710 --> 00:45:26.670
Benefit girl: Yes.

490
00:45:35.334 --> 00:45:38.710
Lion Prado: You use to buy.

491
00:45:40.400 --> 00:45:41.340
Benefit girl: Okay.

492
00:45:41.800 --> 00:45:43.430
Lion Prado: Yeah, so that's how it's.

493
00:45:44.260 --> 00:45:46.120
Benefit girl: Alright. Thank you.

494
00:45:47.160 --> 00:45:47.880
Lion Prado: Oh, come.

495
00:45:54.140 --> 00:46:00.769
Lion Prado: So I wanted to ask to do something on the the arithmetic equation.

496
00:46:00.920 --> 00:46:05.800
Lion Prado: So we have a the sound, and we have

497
00:46:06.130 --> 00:46:12.090
Lion Prado: a difference. We have the products, the cushions, and the remainder

498
00:46:13.690 --> 00:46:16.930
Lion Prado: negative doesn't work. So what we have seen over years

499
00:46:17.240 --> 00:46:24.949
Lion Prado: and the difference between the numbers. But at least anytime you are finding the difference between 2 2 variables.

500
00:46:28.060 --> 00:46:36.920
Lion Prado: Anytime. You're finding the difference between small and best. You see over here, I'm just making it straight forward. But let's say, in your code we have, you have, and let's.

501
00:46:39.250 --> 00:46:40.100
Sophylon: Thank you.

502
00:46:40.100 --> 00:46:43.630
Lion Prado: Let's number one.

503
00:46:44.060 --> 00:46:46.290
Sophylon: Is, this is the point, because, like.

504
00:46:46.580 --> 00:46:47.880
Lion Prado: Then I'm trying.

505
00:46:49.280 --> 00:46:49.810
Sophylon: Oh!

506
00:46:50.330 --> 00:46:52.030
Lion Prado: You take it too right?

507
00:46:52.880 --> 00:46:58.569
Lion Prado: You cannot come in and do something like that, that you are storing results.

508
00:46:58.710 --> 00:46:59.520
Sophylon: Actually.

509
00:46:59.520 --> 00:47:05.400
Lion Prado: And result is is supposed to be number one, plus number 2. Why, why do you think it's not going to anyone.

510
00:47:13.100 --> 00:47:14.499
AMO: Fair enough.

511
00:47:14.958 --> 00:47:18.629
Lion Prado: Why you think it's not going to work.

512
00:47:18.970 --> 00:47:21.149
Ralph Mensah: Wouldn't be the different data types.

513
00:47:23.150 --> 00:47:23.649
LAWRENCE APPIAH-NUAMAH: I'll be good.

514
00:47:24.440 --> 00:47:28.140
jammi: Maybe because of different.

515
00:47:28.140 --> 00:47:29.699
LAWRENCE APPIAH-NUAMAH: The the difference is.

516
00:47:30.530 --> 00:47:32.690
Lion Prado: Yeah, exactly, because of the difference.

517
00:47:32.690 --> 00:47:33.170
Benefit girl: Okay.

518
00:47:33.170 --> 00:47:35.429
Lion Prado: Of the on site the size of the.

519
00:47:35.810 --> 00:47:39.339
Lion Prado: If you try to do something like this, the compiler is going to throw an error.

520
00:47:40.032 --> 00:47:42.479
Lion Prado: so I can't do a clear move from here.

521
00:47:44.590 --> 00:47:49.559
Lion Prado: So you see over here, and I'm retaining uses for right.

522
00:47:50.400 --> 00:47:53.840
Lion Prado: Let me try retaining you 32,

523
00:47:56.890 --> 00:48:01.940
Lion Prado: and you see? It's already through. Train an error invalid return, and

524
00:48:02.240 --> 00:48:07.480
Lion Prado: because the green values are using before, use it before.

525
00:48:08.050 --> 00:48:13.520
Lion Prado: and it does so, meaning you are supposed to go and change this to you 32 before the

526
00:48:13.830 --> 00:48:18.401
Lion Prado: retain is going to work. Hope you understand what

527
00:48:24.000 --> 00:48:32.340
Lion Prado: you always have to make sure that it's of the same type of the unsigned. The moment you you make a difference between them, your code is going to crack.

528
00:48:33.750 --> 00:48:34.650
Sophylon: Standpoint.

529
00:48:35.530 --> 00:48:36.360
Sophylon: Yeah.

530
00:48:45.980 --> 00:48:46.770
Sophylon: let's see.

531
00:48:46.770 --> 00:48:49.889
Lion Prado: And now, when it comes to comparison operators, you know.

532
00:48:50.110 --> 00:48:57.140
Lion Prado: So these are the arithmetic operations to arrange message greetings.

533
00:48:57.270 --> 00:49:00.969
Lion Prado: What we've done. So this, for addition is for difference.

534
00:49:01.090 --> 00:49:10.680
Lion Prado: The asterisk over here is for product, which is the multiplication and the the this one is for the slash over here is proportion

535
00:49:10.820 --> 00:49:32.519
Lion Prado: and mode. If you do, 10 module 3 is going to retain. One is always going to retain the remainder of the application. So if I do? 10 module, 3, 3 goes into 10. That means I'm 3 times remainder one. So the compiler is going to retain one to you as the answer. So that's how Modu works. And this is basically to the power theory, which is X.

536
00:49:33.700 --> 00:49:35.950
Lion Prado: For now let's go on. And

537
00:49:37.370 --> 00:49:39.479
Lion Prado: what we call comparison of pretest

538
00:50:00.810 --> 00:50:02.869
Lion Prado: like rising over here we have

539
00:50:03.440 --> 00:50:07.080
Lion Prado: when we are trying to check whether 2 numbers are equal.

540
00:50:07.630 --> 00:50:19.909
Lion Prado: So in your code you have good. You are checking whether Num. One, and num. 2 is, are equal, so if Num, one and Num 2 is equal, the moon is going to return to us.

541
00:50:20.720 --> 00:50:25.460
Lion Prado: and if number one is not equal to number 2.

542
00:50:25.800 --> 00:50:53.849
Lion Prado: The moon is going to return. True, but if number one is equal to Lam 2, the moon is going to return first, st same as if number one is greater than lam. 2. The moon is going to return. True, but if Num one is less than 2, the moon is going to return first.st So basically, this is how comprising operation works is always return true or false, based on the statement. So we also have greater than equal to, and less than or equal to 2. We also have that

543
00:50:56.000 --> 00:50:58.119
Lion Prado: as a comprising operation.

544
00:51:05.630 --> 00:51:11.929
Lion Prado: When I am going to focus on logical operators, logical or breakfast.

545
00:51:12.140 --> 00:51:15.310
Lion Prado: I didn't know why they and

546
00:51:16.370 --> 00:51:19.790
Lion Prado: the Id is smarter, is it actually my next move?

547
00:51:26.350 --> 00:51:31.139
Lion Prado: So if you talk about logical operation and anyone who have done. And

548
00:51:31.480 --> 00:51:36.609
Lion Prado: if you understand a lot, and if you've done zeros and ones, or probably

549
00:51:36.920 --> 00:51:40.540
Lion Prado: how how do we call it in mass, that that mask cause.

550
00:51:41.140 --> 00:51:49.700
Lion Prado: Yeah, tree stable, yay, one and one is going to retain 1 1 right

551
00:51:50.870 --> 00:51:54.050
Lion Prado: one and 0 is going to return 0.

552
00:51:54.210 --> 00:51:55.590
Lion Prado: It is going to be true.

553
00:51:58.080 --> 00:51:59.020
Lion Prado: Exactly. See.

554
00:51:59.020 --> 00:52:06.380
Lion Prado: it's always going to be true when we values. That's when I'm doing the end operation. The end operation is always true.

555
00:52:07.340 --> 00:52:10.130
Lion Prado: So this is the end. The 1st one is the end operation.

556
00:52:10.280 --> 00:52:23.700
Lion Prado: So the I'll increasing operator ease always through.

557
00:52:25.484 --> 00:52:29.970
Lion Prado: Oh, if both values are true.

558
00:52:30.290 --> 00:52:30.980
Lion Prado: Yeah.

559
00:52:31.200 --> 00:52:36.620
Lion Prado: So if you start to the endocrator, you can see we can see bye

560
00:52:37.170 --> 00:52:39.300
Lion Prado: it's going to be 10 force if

561
00:52:39.520 --> 00:52:44.280
Lion Prado: if one of them is is forced. So let me see if I'm doing

562
00:52:44.440 --> 00:52:47.059
Lion Prado: 2 and through through and force

563
00:52:47.310 --> 00:52:49.270
Lion Prado: it's going to retain force for me.

564
00:52:49.660 --> 00:52:57.469
Lion Prado: But, true or false, you need to retain to at least they all operator to list is all this.

565
00:52:58.810 --> 00:53:04.529
Lion Prado: Now we are saying this, or so, true or false, true or false, is always going to return true

566
00:53:05.360 --> 00:53:07.460
Lion Prado: and not through zoom.

567
00:53:08.680 --> 00:53:14.630
Lion Prado: We need to retain the negation of the North Sea, and the negation of North Sea is what is false.

568
00:53:16.530 --> 00:53:19.400
Lion Prado: at least the excel Brita.

569
00:53:26.400 --> 00:53:28.780
Lion Prado: So now let's go to the if all statements.

570
00:53:38.600 --> 00:53:49.040
Lion Prado: Yeah. So if all is that one of the most important stuff in system, most of the system that we are seeing are a lot of. If if those staffs and being

571
00:53:49.480 --> 00:54:06.377
Lion Prado: let me use an example like a traffic light which uses a timer, so if the time is between this and this probably go to green after some time, move to red after some time, move to yellow. After some time, move to

572
00:54:06.990 --> 00:54:18.789
Lion Prado: green. So that's what it basically just checking time. So that's what if all you're going to do so if number if Number one is greater than number 2. Probably you're telling the compiler that. Oh.

573
00:54:19.050 --> 00:54:27.980
Lion Prado: and yeah, the user, that number one is better. If number one is less than 3.

574
00:54:29.890 --> 00:54:36.880
Lion Prado: Tell the user. That number 2 is better, else the yeah user.

575
00:54:37.510 --> 00:54:45.440
Lion Prado: Both are equal. So exactly. That's how, if else can work, probably I'll pass a number, which is, I'll pass. Number one is 4,

576
00:54:45.550 --> 00:55:11.729
Lion Prado: and number 2 is 3. So the moment I pass this the compiler is going to do an if else check. So if here is 4, and here is 3, meaning, if 4 is greater than 3, so if 4 is greater than 3, meaning, this particular block of code is going to work for me. That's if 4 is greater than 3. This code is going to work. But if 4, if the number here is lesser than the number. Here. I am going to get this block of

577
00:55:12.390 --> 00:55:20.040
Lion Prado: this particular block of 3, but if the enamel here is 4 and the normal year is 4. I'm going to get this block of hope. I'm I'm clear.

578
00:55:23.640 --> 00:55:24.780
Lion Prado: Hope I'm clear by you.

579
00:55:24.780 --> 00:55:25.970
jammi: Yes.

580
00:55:40.556 --> 00:55:41.689
Sophylon: At me.

581
00:55:41.690 --> 00:55:44.279
Lion Prado: Am I breaking? Someone is saying. I am breaking.

582
00:55:46.650 --> 00:55:48.429
Blcvk_man: No, you are not.

583
00:55:48.430 --> 00:55:49.290
Benefit girl: Yeah.

584
00:55:52.910 --> 00:55:57.430
Lion Prado: Now, please, if you have a question, and don't send it to my Vm.

585
00:55:57.430 --> 00:55:57.940
Sophylon: Yes.

586
00:55:57.940 --> 00:56:01.370
Lion Prado: Send it to the chat mode so that I can read it.

587
00:56:01.810 --> 00:56:02.205
Sophylon: Yeah.

588
00:56:02.600 --> 00:56:04.979
Lion Prado: Everyone can meet, you know, people

589
00:56:05.160 --> 00:56:09.036
Lion Prado: so just type it to my instead of sending it to my.

590
00:56:11.510 --> 00:56:12.010
Sophylon: Alright.

591
00:56:12.895 --> 00:56:13.420
Sophylon: Okay.

592
00:56:17.010 --> 00:56:18.799
Lion Prado: So now we'll go to Wallops.

593
00:56:26.460 --> 00:56:33.160
Lion Prado: So if you talk about what what looks, and basically let me use a game like this game, that's some way that we always play

594
00:56:33.410 --> 00:56:36.410
Lion Prado: is subway is in a forever loop.

595
00:56:40.662 --> 00:56:57.940
Lion Prado: Something like that code will keep running to that. So like we are seeing this beautiful

596
00:56:58.370 --> 00:57:06.119
Lion Prado: is mutable over here because I is mutable over here you can keep running different values of I

597
00:57:11.290 --> 00:57:17.510
Lion Prado: YI should be 0. So what you are saying is like, if I is less than 13 something

598
00:57:18.260 --> 00:57:21.060
Lion Prado: so, because if I always always less than 10.

599
00:57:21.200 --> 00:57:21.780
Sophylon: Okay.

600
00:57:21.780 --> 00:57:27.440
Lion Prado: The code is going to keep running, sir, so I and

601
00:57:30.410 --> 00:57:39.739
Lion Prado: and the code will keep running. Once I is less than 10. This code is always going to run. It's going to run from 123-45-6789,

602
00:57:40.000 --> 00:57:46.319
Lion Prado: 10. So when it runs 10, and it sees that 10 is not less than 10, then it will break.

603
00:57:46.990 --> 00:57:53.239
Lion Prado: So that's how basically, how a world works. What you're saying is like when I is less than 10. So if you press, run

604
00:57:53.420 --> 00:58:02.560
Lion Prado: the 1st one I, which is 0, 0 is less than 10, it will come. Retain 0 by here, and it becomes 0 plus one.

605
00:58:06.340 --> 00:58:08.240
Lion Prado: It's kind of 0 plus one.

606
00:58:08.390 --> 00:58:22.250
Lion Prado: Then 0 plus one is now one. Then the code will come back over here, and this one is less than 10, because one is less than 10. It will come over here. Now I is one, then I become one plus one.

607
00:58:22.380 --> 00:58:31.630
Lion Prado: Then if you come around, one plus one is coming around again because the code will come back and come around 3 plus one. It's not going to get there.

608
00:58:32.090 --> 00:58:35.910
Sophylon: What if you keep running to get some.

609
00:58:37.530 --> 00:58:40.700
Lion Prado: You see, if you keep running it, you get 10 plus one.

610
00:58:40.700 --> 00:58:43.080
Lion Prado: You're gonna when it gets to 10 plus one.

611
00:58:43.140 --> 00:58:48.679
Lion Prado: Yep is going to stop. It is going to stop at 9, plus one

612
00:58:48.790 --> 00:59:02.379
Lion Prado: to stop over here. 9 plus one is 10. Then it means 10 over here, and because 10 is not is not less than 10. They could break over here. So hope you understand how I look.

613
00:59:07.540 --> 00:59:13.809
Benefit girl: Sleepway with, as a way it is not plus one.

614
00:59:14.090 --> 00:59:14.370
Sophylon: Okay.

615
00:59:14.370 --> 00:59:22.150
Benefit girl: Let's say it is plus 2, and when you get to, you know when it gets to. Sorry. No, let's say it is plus 3.

616
00:59:22.290 --> 00:59:30.400
Benefit girl: So maybe we say one plus 3. Then maybe when you get to 6 plus 3 9, you know, it doesn't attend to the.

617
00:59:30.700 --> 00:59:31.000
Sophylon: But.

618
00:59:31.000 --> 00:59:36.430
Benefit girl: Non bias. So when we do 9 plus 3 again, it's thank you.

619
00:59:36.430 --> 00:59:44.070
Benefit girl: See the loop and move to 11. So we did loop stop. We didn't give infinite loop like that, or it's just

620
00:59:44.070 --> 00:59:45.600
Benefit girl: thought but that and.

621
00:59:45.600 --> 00:59:48.519
Lion Prado: Yay is too late.

622
00:59:48.670 --> 00:59:52.310
Lion Prado: Because if you get to 9, 9 plus 3 is 4

623
00:59:52.770 --> 00:59:55.069
Lion Prado: and small, it's not less than 10 right?

624
00:59:55.670 --> 01:00:02.920
Lion Prado: Computer right at.

625
01:00:05.030 --> 01:00:06.089
Lion Prado: Can you get it?

626
01:00:06.260 --> 01:00:09.889
Benefit girl: Okay. So to stop at 9, it will exceed the loop.

627
01:00:09.890 --> 01:00:12.430
Lion Prado: Let's do that. This was his fantasy.

628
01:00:13.390 --> 01:00:28.180
Lion Prado: Instead of doing, I plus only I plus 3. So I is going to start from 0. Then you need to check 0 less than 10. So if there, because there is less than 10 and 0 will come over and it becomes 0 plus 3. So you are going to get

629
01:00:28.900 --> 01:00:29.620
Lion Prado: 0.

630
01:00:29.620 --> 01:00:31.710
Sophylon: Plus.

631
01:00:34.660 --> 01:00:37.060
Lion Prado: Where the whole black black hair rise.

632
01:00:37.180 --> 01:00:42.270
Lion Prado: 0 plus 3 will come away, and 0 plus 3. We see that 3 is less than 10, because 3 is less than 10.

633
01:00:42.450 --> 01:00:51.490
Lion Prado: The next in this meeting, 2, 8, 3, very plaster.

634
01:00:53.040 --> 01:00:54.530
Lion Prado: You guys will be 3 plus

635
01:00:55.450 --> 01:01:03.219
Lion Prado: and 3, plus 3 is 6, 6, we come over 6 is less than 10, plus 6 is less than 16. We come, and running fully.

636
01:01:03.220 --> 01:01:04.320
Sophylon: In the past. Yes.

637
01:01:04.320 --> 01:01:05.306
Lion Prado: Last day

638
01:01:05.910 --> 01:01:18.390
Lion Prado: is 9, and because 9 is less than 10 the code will come back to come and run, run again at 9 9 plus 3. So when they could run from 9 plus 3, the code is going to the 9, plus 3

639
01:01:18.920 --> 01:01:33.050
Lion Prado: greater than 10, and it's not less than 10, because 9 plus 3 is greater than 10. The code will abort at this stage, it will not continue. And it's just going to keep this value, which is 9, it's clear to you now.

640
01:01:37.460 --> 01:01:38.110
Lion Prado: Okay.

641
01:01:38.330 --> 01:01:46.338
Benefit girl: Yeah, it did the same thing for other loops, including for loop and everything. That's the same thing for them, too.

642
01:01:46.910 --> 01:01:48.849
Lion Prado: Room for look. Is that a condition.

643
01:01:50.100 --> 01:01:51.100
Benefit girl: Okay.

644
01:01:52.110 --> 01:02:07.539
Lion Prado: So let's say for that we have a follow- follow this in in 0 to 10. Do something. So let me see if I'm running a loop, and for one, and for this for I in 0 to 10,

645
01:02:07.790 --> 01:02:27.979
Lion Prado: do I plus one. So for for loop, if I'm if it was, for I'm doing. It's also going to run. But for for look you run for look when you know, like the type of condition you want to meet. Do you understand it? Probably I know that I want to run my code to this photograph. It's like, you know what you want to achieve. That's in for loop, because I'm trying to say.

646
01:02:30.770 --> 01:02:31.560
Benefit girl: Okay.

647
01:02:31.940 --> 01:02:37.630
Lion Prado: But in one look you don't know the condition you want to achieve. So it keeps running until that.

648
01:02:39.820 --> 01:02:40.720
Benefit girl: All right.

649
01:02:42.520 --> 01:02:43.270
Benefit girl: You get.

650
01:02:53.050 --> 01:02:56.110
Lion Prado: We are going to move to finances.

651
01:02:56.310 --> 01:02:56.850
AMO: So.

652
01:02:56.850 --> 01:02:57.280
Lion Prado: And

653
01:03:05.050 --> 01:03:06.210
Lion Prado: I can't.

654
01:03:06.210 --> 01:03:06.620
AMO: Absolutely.

655
01:03:06.620 --> 01:03:07.700
Lion Prado: Yeah, you will.

656
01:03:09.724 --> 01:03:18.610
AMO: I said. What if I'm using number from you? From probably 31 to 40, are we? Are we going to use the same method.

657
01:03:19.940 --> 01:03:24.500
Lion Prado: Yeah, it's the same method for everything. This is just a a scenario.

658
01:03:25.120 --> 01:03:27.040
Lion Prado: and it's not always going to be.

659
01:03:27.040 --> 01:03:28.470
AMO: The framework.

660
01:03:29.300 --> 01:03:33.750
Lion Prado: Therefore, yeah, okay, thank you.

661
01:03:35.560 --> 01:03:36.330
Lion Prado: Yeah.

662
01:03:37.920 --> 01:03:38.830
AMO: Can you hear me?

663
01:03:39.500 --> 01:03:41.099
AMO: Yeah, you can please. You can go with your question.

664
01:03:41.100 --> 01:03:43.830
AMO: It's so cool, cool.

665
01:03:44.630 --> 01:03:48.020
Lion Prado: No, go, go on with your question. If you can hear me, go on with your question.

666
01:03:50.740 --> 01:03:55.280
AMO: Yeah, I asked the question that if probably I'm using the 4 in the

667
01:03:55.420 --> 01:04:10.000
AMO: like this, follow up and I'm trying to use maybe number ranging from 31 to 40. Am I going to use? This same method you use here? I just need to do 31, and I add 2 period, and I mean the dots and the.

668
01:04:10.670 --> 01:04:12.490
Lion Prado: I mean, right?

669
01:04:12.490 --> 01:04:13.979
Lion Prado: Okay, I get it. I get it.

670
01:04:13.980 --> 01:04:14.930
Lion Prado: We don't use.

671
01:04:14.930 --> 01:04:19.480
Lion Prado: We don't use docs and docs is not our how to run run a full.

672
01:04:23.760 --> 01:04:30.219
Lion Prado: we get it, and we also have breaks and continue. So some of the stuff.

673
01:04:31.303 --> 01:04:35.870
AMO: There are 2 dots between.

674
01:04:42.690 --> 01:04:44.450
Lion Prado: Are you talking about it for loop?

675
01:04:48.890 --> 01:04:52.410
Lion Prado: Hello! Can you type your question in the chat chat box?

676
01:04:55.710 --> 01:04:58.080
LAWRENCE APPIAH-NUAMAH: Yeah, I think I think he was talking about the follow.

677
01:05:00.210 --> 01:05:00.960
LAWRENCE APPIAH-NUAMAH: Oh.

678
01:05:04.640 --> 01:05:05.300
Lion Prado: Yeah.

679
01:05:10.810 --> 01:05:14.789
Lion Prado: is it like he wants an example code, or what? I don't understand what he's trying to say.

680
01:05:18.180 --> 01:05:19.780
LAWRENCE APPIAH-NUAMAH: If I go. Team is like.

681
01:05:29.100 --> 01:05:30.060
Lion Prado: Z out.

682
01:05:34.180 --> 01:05:35.050
LAWRENCE APPIAH-NUAMAH: I think we can.

683
01:05:35.050 --> 01:05:36.370
LAWRENCE APPIAH-NUAMAH: He's muted.

684
01:05:38.410 --> 01:05:39.979
Lion Prado: Is he on mute himself.

685
01:05:42.480 --> 01:05:45.150
LAWRENCE APPIAH-NUAMAH: Okay, you have spaced it in a group in the chat.

686
01:05:49.910 --> 01:05:52.920
Sui Ghana: I think she's having like challenges.

687
01:06:00.550 --> 01:06:02.490
LAWRENCE APPIAH-NUAMAH: Lyon. You just put it in a chat, too.

688
01:06:03.140 --> 01:06:04.590
Lion Prado: Yeah, I'm I'm going to read it.

689
01:06:10.630 --> 01:06:13.169
Lion Prado: No, no, you don't. You don't need to use that lot.

690
01:06:13.690 --> 01:06:17.269
Lion Prado: What I'm doing is more is more like, I'm just using a

691
01:06:17.470 --> 01:06:23.309
Lion Prado: how do we call it? And comments comments to explain that 0 0 Council. Go on with your question.

692
01:06:24.420 --> 01:06:29.529
Young Jiloo: Alright. So I want like, let's say, I want

693
01:06:30.212 --> 01:06:34.859
Young Jiloo: this function to give me a return. If you, your age is less than

694
01:06:35.230 --> 01:06:39.219
Young Jiloo: 18, let's say, if you are 18, and below

695
01:06:39.540 --> 01:06:44.219
Young Jiloo: this, and then when you're eating, and above which one is appropriate, is it the

696
01:06:44.650 --> 01:06:46.770
Young Jiloo: while loop or the for loop.

697
01:06:47.520 --> 01:06:53.650
Lion Prado: If else is better to eat in the East coast, so probably you you saw it as if as a variable.

698
01:06:53.790 --> 01:07:03.150
Lion Prado: Who this? What you are trying to say. So let me see, let's ease

699
01:07:06.330 --> 01:07:12.550
Lion Prado: let it. It is a new, this equal to things. Right?

700
01:07:14.870 --> 01:07:18.639
Lion Prado: So with this it's better to use the if else.

701
01:07:18.960 --> 01:07:30.429
Lion Prado: So if it's adult, if your age is greater than 80, then we are going to return to an adult, else we are going to return 1st negative. It's better to use if else for that one.

702
01:07:31.490 --> 01:07:32.340
Lion Prado: You guys.

703
01:07:32.780 --> 01:07:34.280
Young Jiloo: Yeah, yeah, I get it. Man.

704
01:07:41.570 --> 01:07:45.329
Lion Prado: So I'm going to function before I go to function. Any any other question.

705
01:07:48.113 --> 01:07:50.280
Flashman: Yes, please. A question here

706
01:07:50.660 --> 01:08:02.820
Flashman: like in the move language, how do you run code? For example, if we take a python, there's something we can use the print command, Java. We can use SOUT. In move. How do we go about that?

707
01:08:04.470 --> 01:08:07.889
Lion Prado: Yeah. So use the debug.

708
01:08:08.320 --> 01:08:10.939
Lion Prado: Wow, if you start writing with edge

709
01:08:11.110 --> 01:08:18.419
Lion Prado: you, you will not really use it. If you're writing a whole lot of code. So it's better just to write test for your code.

710
01:08:18.960 --> 01:08:20.499
Lion Prado: But you can eat daily. But

711
01:08:20.970 --> 01:08:30.240
Lion Prado: and you cannot run code like you just like normal python. You can just move. We just use this to debug it. So if we come over, you know.

712
01:08:36.340 --> 01:08:38.119
Lion Prado: So you see about

713
01:08:43.300 --> 01:08:45.880
Lion Prado: in bag you, you want to see that in bag right?

714
01:08:46.300 --> 01:08:47.109
Flashman: This.

715
01:08:47.790 --> 01:08:53.020
Lion Prado: Yes, we can use to print. But actually, it's for a test is for test.

716
01:08:53.319 --> 01:08:54.250
Lion Prado: You got it.

717
01:08:54.540 --> 01:08:59.300
Lion Prado: Run it as a normal code. It's it's going to break down. You're supposed to run it as a test.

718
01:08:59.640 --> 01:09:00.410
Lion Prado: Yes, yes.

719
01:09:00.870 --> 01:09:05.949
Lion Prado: Yeah. Suppose you write test for your code, then you do it before you can print your code.

720
01:09:07.520 --> 01:09:10.030
Lion Prado: So probably tomorrow we'll do something like that.

721
01:09:10.850 --> 01:09:12.059
Flashman: For a short answer.

722
01:09:12.069 --> 01:09:14.329
Lion Prado: But if you are writing complex application

723
01:09:14.519 --> 01:09:27.279
Lion Prado: when you're writing your test and you're passing this kind of stuff, you see that your code is going to be some kind of bulky, so you ignore it. So if you're writing smart contract, the best way is to write test for your code, make sure the tests are passing.

724
01:09:27.819 --> 01:09:39.039
Lion Prado: So that's the reason why you always very necessary to write this for a smart contract for smart contract language do not really have that French function. How it works easily in our other quotes like that.

725
01:09:39.808 --> 01:09:49.919
Lion Prado: Yeah, even for solidity. I know it doesn't. But I think, unless you're using the equipment or something, but you move unless you're writing this before you can print the outfit, else you cannot print.

726
01:09:50.039 --> 01:09:55.009
Lion Prado: Yeah, even with this one. If I try to build this. If I try to build the code.

727
01:09:55.179 --> 01:10:00.769
Lion Prado: you see, with this one, it has printed it. Anyway, this is how it's printed. It's printed in some with some

728
01:10:01.309 --> 01:10:09.639
Lion Prado: it's not normal, like how we see it in our normal front end bag.

729
01:10:09.769 --> 01:10:14.709
Lion Prado: but actually to move. It's a test. Your writing, I know.

730
01:10:15.479 --> 01:10:22.139
Lion Prado: So if I try to build this group, probably through an arrow

731
01:10:23.319 --> 01:10:25.479
Lion Prado: telling me I'm not multi user.

732
01:10:25.799 --> 01:10:27.789
Lion Prado: Okay? I didn't after I did it.

733
01:10:28.079 --> 01:10:28.789
Lion Prado: Let me see.

734
01:10:36.479 --> 01:10:37.179
Lion Prado: Yeah.

735
01:10:40.189 --> 01:10:43.019
Lion Prado: sometimes it's even tell you that you are not making this up

736
01:10:43.149 --> 01:10:51.789
Lion Prado: this debug over here, but I guess it has run successfully. So if you write, if you just run the code like this, you're not going to get any output.

737
01:10:51.979 --> 01:10:57.359
Lion Prado: You only get an output when you make an error in your code like. If I make an error while you make me.

738
01:10:57.529 --> 01:11:04.519
Lion Prado: you let me leave it. Probably if I make this 0, that's the only thing

739
01:11:04.659 --> 01:11:15.739
Lion Prado: the compiler is going to tell me that I've made an error, but it's not going to output anything to me. It's either it's either output errors to you or warnings to you. That's what the compiler does.

740
01:11:17.659 --> 01:11:21.169
Lion Prado: So if you want to get output, you're supposed to write this

741
01:11:22.059 --> 01:11:26.989
Lion Prado: for your food, so so that one, you needed test command.

742
01:11:28.219 --> 01:11:32.379
Lion Prado: just come out to get get out so that you can get out.

743
01:11:32.619 --> 01:11:33.919
Lion Prado: But I think, you know, like

744
01:11:34.219 --> 01:11:48.249
Lion Prado: our normal business. So they actually basically this, what you see it is results. One results. 2 results, 3 results within another language. If you write resource one, then the output will come to this right

745
01:11:49.769 --> 01:11:58.129
Lion Prado: results to an output to come to. But it just going to be back to back with 8 frames outputs. And if you are writing a bulky contract.

746
01:11:58.299 --> 01:12:03.679
Lion Prado: and you'll not be interested in this task. You just be interested in writing the test for your skippers.

747
01:12:03.999 --> 01:12:11.189
Lion Prado: because even if you make a mistake in the test. The code will have worked if I'm not printed and I make a mistake in my test. The code will have worked

748
01:12:11.599 --> 01:12:13.579
Lion Prado: to know wrong. They test to know wrong

749
01:12:24.469 --> 01:12:27.369
Lion Prado: any other question. Jillo Jillo, you can ask your question.

750
01:12:32.589 --> 01:12:33.279
Lion Prado: Hello!

751
01:12:33.609 --> 01:12:34.759
Lion Prado: I want to wrap up.

752
01:12:37.509 --> 01:12:40.419
Lion Prado: Wow! I can't finish everything today. I thought, I can't finish it.

753
01:12:42.609 --> 01:12:43.439
Lion Prado: You.

754
01:12:45.760 --> 01:12:47.510
Young Jiloo: I'll put $100 money.

755
01:12:48.390 --> 01:12:54.899
Lion Prado: Oh, okay, okay, so, and our next thing is functions. And what are what are functions?

756
01:12:55.370 --> 01:12:56.080
Lion Prado: Yeah.

757
01:12:56.830 --> 01:13:00.979
Lion Prado: So first, st now, I would like us to get a package for it.

758
01:13:01.890 --> 01:13:10.610
Lion Prado: So functions are, the function of features is a feature. So basically, whatever we are doing today runs across every language that you need

759
01:13:10.780 --> 01:13:12.249
Lion Prado: any any language.

760
01:13:12.370 --> 01:13:14.860
Lion Prado: You you will miss emails over there.

761
01:13:15.020 --> 01:13:18.049
Lion Prado: the logical Gritz, the the wall looks

762
01:13:18.310 --> 01:13:24.860
Lion Prado: and verbal declaration and stuff. Yeah, whatever you also meet functions in any language that you pass through.

763
01:13:24.980 --> 01:13:30.549
Lion Prado: So basically, whatever we are doing today is across languages.

764
01:13:31.540 --> 01:13:36.399
Lion Prado: Yeah, so functions and and help us to write a specific put.

765
01:13:37.140 --> 01:13:44.619
Lion Prado: and we can. And we can use it multiple times instead of rewriting. We just like, you see, this in this code

766
01:13:44.950 --> 01:13:46.739
Lion Prado: you have. You have a fine thing.

767
01:13:47.190 --> 01:14:06.420
Lion Prado: and this function is always going to add 2, 3 integers we probably now could look. We don't always want to write. X result, one is equal to a plus VX result 2 is equal to C plus VX result a, so probably are going to make many additions. So instead of instead of us writing, always

768
01:14:06.460 --> 01:14:26.549
Lion Prado: creating so many variables for addition, you can just write one function. So just this function alone, anytime I call. I call this address, and I pass 2 numbers to it. It's always going to add, if I call this address 10 times its numbers, it's always going to give me the output of the addition of the numbers, instead of always.

769
01:14:26.900 --> 01:14:33.270
Lion Prado: and declaring variables and manually doing the addition. Hope you understand how function works

770
01:14:38.140 --> 01:14:42.000
Lion Prado: we understand, like this, one of the most important steps.

771
01:14:42.000 --> 01:14:43.519
LAWRENCE APPIAH-NUAMAH: Okay, give me the 5, 6.

772
01:14:43.780 --> 01:15:07.260
Lion Prado: Because function are going to act like the Api for your front end. So your front end is always going to call functions in your code. So is there one of the most important thing you need to understand, else you can't. You can't write smart contracts because you are going to act as the Api to the content, because the front end always call a function to work. If I I say, function function is is a block of code

773
01:15:07.320 --> 01:15:18.180
Lion Prado: which can be called multiple times like instead of it's like a re, a reusable, let me see, like either reusable block of which you can call multiple times. So you see, we have

774
01:15:18.750 --> 01:15:20.720
Lion Prado: add entries over here. Right?

775
01:15:21.010 --> 01:15:26.140
Lion Prado: With this add entries, I can call add entries again.

776
01:15:26.520 --> 01:15:36.130
Lion Prado: Relax, probably result 4 results, for

777
01:15:39.670 --> 01:15:40.750
Lion Prado: if you go to.

778
01:16:09.220 --> 01:16:11.440
Lion Prado: So you see, I'm calling resort 5 right

779
01:16:11.710 --> 01:16:15.480
Lion Prado: in results. 5. I'm passing 100 200 sweet pipes.

780
01:16:18.640 --> 01:16:20.079
Lion Prado: Hope you are seeing this, too.

781
01:16:23.280 --> 01:16:26.360
Lion Prado: I I used in Aku results 5.

782
01:16:28.630 --> 01:16:29.390
Lion Prado: I'm already.

783
01:16:29.390 --> 01:16:30.600
Chemist: Oh, isn't that?

784
01:16:31.080 --> 01:16:31.740
Chemist: Yes.

785
01:16:31.740 --> 01:16:39.529
Lion Prado: So result 5. Yeah, I'm passing 100 200. Now, I also have results. One, which is, I'm I'm calling the same function.

786
01:16:39.680 --> 01:16:43.179
Lion Prado: Well, let me commit all this out.

787
01:16:49.880 --> 01:16:52.100
Lion Prado: We are now focusing on just the addition.

788
01:16:53.060 --> 01:16:54.939
Lion Prado: Let's create another addition.

789
01:16:55.750 --> 01:16:56.570
Lion Prado: Relax.

790
01:16:57.780 --> 01:16:58.950
Lion Prado: He's got 6.

791
01:17:01.770 --> 01:17:06.769
Lion Prado: Then next hours I will just comment.

792
01:17:09.650 --> 01:17:12.590
Lion Prado: And let's result 7.

793
01:17:14.040 --> 01:17:16.720
Lion Prado: Then let's is that it?

794
01:17:17.620 --> 01:17:23.820
Lion Prado: Then let's result 9, then let's result 10, result 1112, 13%,

795
01:17:24.130 --> 01:17:26.259
Lion Prado: 1617. April 1922.

796
01:17:26.520 --> 01:17:37.739
Lion Prado: You see, I'm just calling just one function operating over there, and all I'm doing is just passing numbers numbers to A and BA and BA, and BA, and B. Hope you all can see it right.

797
01:17:39.170 --> 01:17:41.280
Lion Prado: All means passing A and BT.

798
01:17:41.650 --> 01:17:45.790
Lion Prado: The error is because they are not making use of it. So let's make use of it

799
01:17:47.820 --> 01:17:49.470
Lion Prado: is absolutely easy.

800
01:17:59.550 --> 01:18:01.389
Lion Prado: Yes. So now all the arrows should go.

801
01:18:02.220 --> 01:18:07.010
Lion Prado: So all I'm doing. I've just created one block of food, which is, that's good.

802
01:18:08.290 --> 01:18:15.240
Lion Prado: And out of just this code I'll be able to call just that one code multiple times over here. So if I run my code.

803
01:18:16.500 --> 01:18:20.570
Lion Prado: let me see this, if or

804
01:18:30.200 --> 01:18:31.830
Lion Prado: if I tell this could.

805
01:18:33.230 --> 01:18:35.029
Lion Prado: She is giving me all the options.

806
01:18:40.720 --> 01:18:47.450
Lion Prado: but I didn't manually, instead of a instead of doing it manually.

807
01:18:47.620 --> 01:19:04.030
Lion Prado: which is, I'll always be creating different variables, and I'll create and let's result. One is equal to 5 classes. Next result 2 is equal to 7 plus 8. Let's result 3 is equal to 9 plus 10. Instead of creating different stuff. I just have one.

808
01:19:05.020 --> 01:19:06.770
Lion Prado: I just have one and

809
01:19:07.790 --> 01:19:24.899
Lion Prado: function. This function on all this machine is, you just add, in any addition of that, too. So that's our function work. So you just run right one line of code.

810
01:19:25.310 --> 01:19:39.860
Lion Prado: and you just write some lines of code which you can reuse in your code any point in time. So sometimes we have some get this function. Let's say you create a function in that that function. And let me use this code.

811
01:19:42.220 --> 01:19:48.509
Lion Prado: Let's say over here, we will always create a charity, you always register a charity.

812
01:19:48.680 --> 01:19:51.539
Lion Prado: So once we register the charity

813
01:19:51.670 --> 01:19:58.189
Lion Prado: instead of me, always creating. Let me see, I always create a a new name. A new description.

814
01:20:01.290 --> 01:20:02.160
Lion Prado: profit.

815
01:20:04.100 --> 01:20:05.259
Chemist: Yeah, I think.

816
01:20:05.893 --> 01:20:09.239
Chemist: You're working, is it? From my end?

817
01:20:10.760 --> 01:20:11.940
Lion Prado: Am I breaking.

818
01:20:13.260 --> 01:20:15.320
Chemist: No, no! You have breaking.

819
01:20:15.760 --> 01:20:16.430
Godfred Addai Amoako: Hypothetically.

820
01:20:16.430 --> 01:20:17.860
Chemist: Maybe it's for my end.

821
01:20:18.890 --> 01:20:19.950
Chemist: That's yeah.

822
01:20:19.950 --> 01:20:20.510
Lion Prado: Right.

823
01:20:20.630 --> 01:20:22.720
Lion Prado: These guys who have this function.

824
01:20:23.070 --> 01:20:25.099
Lion Prado: the least function is registered charity.

825
01:20:25.290 --> 01:20:39.029
Lion Prado: So in the front end, the front end is going to call this register charity. And if the front end calls this register charity, what the user is going to see is the name and the description, which is the name, the name of the charity.

826
01:20:39.210 --> 01:20:42.780
Lion Prado: and the purpose of their charity. So this is what the important events we see.

827
01:20:42.910 --> 01:21:02.860
Lion Prado: So if if 10 people call so many 10 people can call this just this one line of code. Instead of repeat repeating this line of code for 10 different people. I just have this function in this function. Many people can call this function. It's basically given the same hope. You understand how how function works.

828
01:21:14.190 --> 01:21:17.419
Lion Prado: Are. We are we good with how financing works. We, if

829
01:21:17.650 --> 01:21:22.019
Lion Prado: like, I said, the code is just everything is just going to be a function. It's function

830
01:21:22.200 --> 01:21:26.430
Lion Prado: fine soon, anything, every most of the stuff you are going to meet is just fine soon.

831
01:21:26.590 --> 01:21:34.030
Lion Prado: Functions where where we've gotten to is the most important part of of it. So we need to understand how how function works.

832
01:21:34.140 --> 01:21:40.130
Lion Prado: So let let me, anyone who can voluntarily explain questions to me.

833
01:21:41.050 --> 01:21:43.079
Lion Prado: If not, I'll just wrap up on it.

834
01:21:44.450 --> 01:21:45.320
Godfred Addai Amoako: The lion.

835
01:21:45.590 --> 01:21:47.099
Godfred Addai Amoako: I wanted to

836
01:21:48.240 --> 01:21:53.880
Godfred Addai Amoako: add a contribution or say a question like, sort of. So you can go to where we're writing the functions.

837
01:21:54.460 --> 01:21:56.510
Godfred Addai Amoako: And while we're writing the test.

838
01:21:57.350 --> 01:21:57.880
Lion Prado: Okay.

839
01:21:57.880 --> 01:21:59.609
Godfred Addai Amoako: The code for writing the test.

840
01:22:00.100 --> 01:22:00.980
Lion Prado: Yeah, huh.

841
01:22:01.290 --> 01:22:13.210
Godfred Addai Amoako: So you see where the debug and prints resource resource 1, 2, 3, and other ones right? Why don't we also write a function that can maybe help us simplify

842
01:22:13.320 --> 01:22:23.940
Godfred Addai Amoako: as declaring the function real by real, but so that it won't have. You have to repeat code multiple times, and then we apply the principles and functions into it.

843
01:22:26.120 --> 01:22:27.540
Lion Prado: I don't. I don't really get.

844
01:22:28.350 --> 01:22:36.100
Godfred Addai Amoako: And can you scroll up a bit? And we see we declared the results for the variables. Right? We have resource. One. Resource, 2.

845
01:22:36.220 --> 01:22:39.740
Godfred Addai Amoako: Resource? 3. Up to the results. 20 or so.

846
01:22:40.250 --> 01:22:48.340
Godfred Addai Amoako: I was thinking, is there any way whereby we can also use the idea of functions to be able to simplify that code so that we won't have to repeat

847
01:22:48.742 --> 01:22:53.820
Godfred Addai Amoako: if, whenever we have a new test to write, we don't have to repeat declaring a new, variable.

848
01:22:55.510 --> 01:23:02.680
Lion Prado: Oh, okay, you can use an internal function for that. But what I'm what what I'm trying to explain over here is er

849
01:23:03.070 --> 01:23:05.220
Lion Prado: I'm just calling a fine thing.

850
01:23:05.500 --> 01:23:11.819
Lion Prado: Yeah. What I'm trying to explain why is is at any moment in time. In my code. If at any moment in time, in my code.

851
01:23:12.270 --> 01:23:20.790
Lion Prado: I want to use A, I want to make an addition. I don't need to declare a new variable and say, Hey

852
01:23:21.150 --> 01:23:29.050
Lion Prado: is equal to B plus A, I can just call this my normal function. So in any point of my food, I'm not going to use

853
01:23:29.160 --> 01:23:40.739
Lion Prado: result, I'll just call this function. And that function is always, I think, because it's a test. You need to assign it to some, some to some outputs.

854
01:23:41.520 --> 01:23:55.359
Lion Prado: But if it was anywhere here in my code, and probably somewhere here in my code, after I do multiple multiply entries, probably the result I am getting over here. I can pass that result. Just following this function.

855
01:23:55.560 --> 01:24:02.059
Lion Prado: add increase over here to retain it. As a result, instead of declaring another

856
01:24:02.300 --> 01:24:05.829
Lion Prado: and variable, which is going to add, add the fingers and fences.

857
01:24:09.610 --> 01:24:11.590
Godfred Addai Amoako: Yeah, I do. I do. I do. Thank you.

858
01:24:28.210 --> 01:24:39.819
Lion Prado: So you see, like this table we are seeing right. This contains is an a specific id.

859
01:24:40.110 --> 01:24:41.390
Lion Prado: the same charities.

860
01:24:41.500 --> 01:24:48.720
Lion Prado: It's good to retain an output for you. That's what this contains is working. So instead of you always writing checks.

861
01:24:49.270 --> 01:25:09.629
Lion Prado: writing plenty checks, which we call this contains method. This contain method is just going to do that check. That's the result returns to. If there's a value associated with the key. That's what this contain method, which is method that sometimes function, and it works at any moment. You might if I call it. That's how you integrate.

862
01:25:10.170 --> 01:25:10.635
Lion Prado: bye.

863
01:25:11.430 --> 01:25:16.829
Lion Prado: you test. You just need to assign it to something to get an outcome, to show that your test is working.

864
01:25:22.760 --> 01:25:28.680
Lion Prado: Are we clear it twice? And I I want one person from Link, for instance. Wow!

865
01:25:29.590 --> 01:25:36.109
Lion Prado: I don't know if I should wrap. I'll wrap up as functions and tomorrow tomorrow stats abilities

866
01:25:36.300 --> 01:25:44.599
Lion Prado: and the vectors references and probably basic resource management. Then there will be time. We'll do error handling, and some assessions.

867
01:25:52.575 --> 01:25:57.919
Benefit girl: Okay. Sorry. Please. Can you go back to the how should I integrate like?

868
01:25:58.140 --> 01:25:59.516
Benefit girl: Go back to it?

869
01:26:03.280 --> 01:26:05.430
Lion Prado: In the ad art code, right?

870
01:26:06.330 --> 01:26:07.220
Benefit girl: Yes.

871
01:26:12.540 --> 01:26:18.330
Lion Prado: Let us. I want us to write a function from scratch on our.

872
01:26:20.200 --> 01:26:22.640
Benefit girl: Okay, so.

873
01:26:22.640 --> 01:26:23.919
Lion Prado: Oh, you got you guys, okay.

874
01:26:25.140 --> 01:26:28.840
Benefit girl: Yes, I was like, I'll submit something clear.

875
01:26:29.030 --> 01:26:34.209
Benefit girl: So we declare the flow show. Yeah, he goes.

876
01:26:34.430 --> 01:26:37.910
Benefit girl: You know, I want to like make it there for work. Newbies.

877
01:26:38.652 --> 01:26:53.500
Benefit girl: Public shows that the function is public. Then the phone is to show that it's is a function. I mean, it's already full function, but like it's make it understandable. Okay, the name of this function is now add underscore and

878
01:26:53.600 --> 01:27:03.020
Benefit girl: underscore trace. And the function is taking 2 arguments. If I'm right, I'm trying to like explain. Maybe it's kind of like what I'm thinking.

879
01:27:03.020 --> 01:27:04.999
Lion Prado: Yeah, yeah, right, you're right.

880
01:27:05.450 --> 01:27:06.590
Benefit girl: Okay. Let's take.

881
01:27:06.951 --> 01:27:10.199
Lion Prado: Next thing I wanted to do, which is the

882
01:27:10.500 --> 01:27:12.719
Lion Prado: modifiers. But you can go and.

883
01:27:13.810 --> 01:27:19.139
Benefit girl: Okay, so it's taken to argument A and B, so we already know that

884
01:27:19.310 --> 01:27:24.719
Benefit girl: and also inties assigned to them to show that okay, these are Inc jazz, and it's performing

885
01:27:24.850 --> 01:27:34.070
Benefit girl: calculation. So we have declared this function to be this trigger. So what you are going to use to call the function is like

886
01:27:34.350 --> 01:27:46.540
Benefit girl: the function name like you did the add underscore and underscore. Trace the way you did it the 1st time. So you please go down that place that you call the function again. I want to like check something.

887
01:27:55.350 --> 01:27:56.360
Lion Prado: Hope you guys see that.

888
01:27:56.360 --> 01:27:57.020
Benefit girl: Okay.

889
01:27:57.250 --> 01:28:03.139
Benefit girl: yes. So I didn't really get how you really call the function. So the way you call the function now

890
01:28:03.460 --> 01:28:06.730
Benefit girl: is, you just use public phone. Then you call the

891
01:28:07.570 --> 01:28:12.980
Benefit girl: this is like the test. So I want to just get how you call the function.

892
01:28:13.210 --> 01:28:18.259
Benefit girl: Yeah, what does it mean to like, call a function

893
01:28:18.650 --> 01:28:33.159
Benefit girl: to perform tax and all that? And can you call apart from this particular code? Can you still call this function? Maybe when you create a new code like when you write the new program. So can you could like call this same function again?

894
01:28:33.710 --> 01:28:34.820
Benefit girl: Can it work now.

895
01:28:34.820 --> 01:28:38.699
Lion Prado: Yeah, yeah, that that's the good question that you are asking.

896
01:28:38.910 --> 01:28:43.049
Lion Prado: So you see. And so that was it made mention of the public

897
01:28:43.510 --> 01:28:47.399
Lion Prado: and the function just to tell the comparative function.

898
01:28:47.750 --> 01:28:51.170
Lion Prado: and the other increases the name of the pricing. That was the perfect.

899
01:28:51.560 --> 01:28:54.210
Lion Prado: And these are the parameters I'm passing.

900
01:28:54.460 --> 01:28:57.229
Lion Prado: It's an argument to their content.

901
01:28:58.330 --> 01:29:01.050
Lion Prado: So we have access modifiers. So we have public.

902
01:29:01.270 --> 01:29:08.339
Lion Prado: So the moment I make the function public meaning, it is accessible from other models. Which is the question you are asking.

903
01:29:08.520 --> 01:29:13.459
Lion Prado: If I don't add any more. If I don't at public over here.

904
01:29:13.770 --> 01:29:15.819
Lion Prado: then automatically, the function is smooth.

905
01:29:17.390 --> 01:29:18.490
Benefit girl: Okay.

906
01:29:20.070 --> 01:29:25.049
Lion Prado: Automatically. The function is, it's private, right?

907
01:29:25.050 --> 01:29:25.389
jammi: Yes.

908
01:29:26.800 --> 01:29:27.820
Lion Prado: He he gets it.

909
01:29:30.790 --> 01:29:33.190
Lion Prado: Yeah. So if I add public over here.

910
01:29:33.390 --> 01:29:41.770
Lion Prado: meaning function is public meaning. If I create a new, I can only call it within this package. I cannot go and call it within an external package. You get it.

911
01:29:41.900 --> 01:29:46.760
Lion Prado: So let's let's say I add a new participant by. Here are 2.

912
01:29:46.960 --> 01:29:51.870
Lion Prado: So it's so it's move right?

913
01:29:53.590 --> 01:29:55.480
Lion Prado: I can import.

914
01:29:56.170 --> 01:30:01.120
Lion Prado: I can quote this Francis in R. 3, 14.

915
01:30:08.340 --> 01:30:11.479
Benefit girl: Okay, you can only call it within the package where we.

916
01:30:11.480 --> 01:30:12.230
Lion Prado: In their pocket.

917
01:30:12.230 --> 01:30:14.709
Benefit girl: You go, but also the parties along college.

918
01:30:14.910 --> 01:30:18.570
Lion Prado: And even within their packages, going to quality, I suppose, to make it public.

919
01:30:19.270 --> 01:30:23.370
Lion Prado: so that public keyword is what makes it for you to call him in a pack.

920
01:30:23.750 --> 01:30:27.309
Lion Prado: You see there, there's 1 function over here over here.

921
01:30:28.540 --> 01:30:31.800
Lion Prado: You see this function. There's nothing like public attached to it.

922
01:30:33.690 --> 01:30:39.980
Lion Prado: And this function is next function runs once

923
01:30:40.100 --> 01:30:48.850
Lion Prado: can only record once, and it runs when I publish the application. Once I publish the application, this function will automatically be called.

924
01:30:48.990 --> 01:30:53.500
Lion Prado: It's going to run once once it runs. Once. We cannot call this

925
01:30:53.600 --> 01:31:05.949
Lion Prado: function like this, and it's a private function like you can see. So delete function are are composite, private. You can just have one delete function in in a particular class.

926
01:31:07.910 --> 01:31:09.749
Lion Prado: Hope you. You understand how it works.

927
01:31:11.130 --> 01:31:15.180
Benefit girl: Okay. So the part I was calling about calling, calling.

928
01:31:15.180 --> 01:31:18.984
Lion Prado: Okay, okay, you say how they're calling calling of pricing. Right?

929
01:31:20.350 --> 01:31:23.930
Lion Prado: So when I'm calling the phone, basically, this is the function.

930
01:31:27.680 --> 01:31:34.390
Lion Prado: So at least how to call the function. You see, all I need is just pass the function, you see, even if I over over it.

931
01:31:35.360 --> 01:31:40.929
Lion Prado: if I over over it. It's giving me where the function is coming from. Hope you can see.

932
01:31:42.190 --> 01:31:42.760
Lion Prado: Thanks.

933
01:31:42.760 --> 01:31:43.630
Benefit girl: Okay.

934
01:31:43.970 --> 01:31:46.310
Lion Prado: So I can call the function this week over here.

935
01:31:46.670 --> 01:31:48.539
Lion Prado: My account call. This comes

936
01:31:51.620 --> 01:31:53.040
Lion Prado: so these are all supported by.

937
01:31:53.040 --> 01:31:56.990
Benefit girl: Unfortunately they are using to call it dazzle.

938
01:31:56.990 --> 01:31:57.660
Lion Prado: Pardon.

939
01:31:58.610 --> 01:32:08.860
Lion Prado: So he's out, yeah, just a function. No, additional. This is how we call functions for all results

940
01:32:09.140 --> 01:32:13.820
Lion Prado: pass this name, and the agreement has been accepted.

941
01:32:13.980 --> 01:32:20.130
Lion Prado: This is how we call the pricing, but because and if I run this code, if I test it, it should work.

942
01:32:21.050 --> 01:32:22.940
Lion Prado: But it's not going to give us any now.

943
01:32:26.150 --> 01:32:27.290
Benefit girl: Okay.

944
01:32:32.080 --> 01:32:34.340
Lion Prado: Why didn't keep asking how

945
01:32:35.950 --> 01:32:49.989
Lion Prado: right? But it's because I wanted to print the output. That's the reason why I was assigning like I told you variables, so that I was assigning a variable container to this. So I was just assigning the outputs to results.

946
01:32:50.410 --> 01:32:58.739
Lion Prado: so that when I print results it's going to print what's inside the results. Like, when I started travel and declaration over here, I made mention of that

947
01:32:59.400 --> 01:33:03.729
Lion Prado: when I started viable viruses over here I may mention that

948
01:33:03.940 --> 01:33:11.679
Lion Prado: this cause that this output. So any any way, I put this in my food, you mean to him in this output, which is 0.

949
01:33:13.970 --> 01:33:14.650
Benefit girl: Okay.

950
01:33:15.740 --> 01:33:16.500
Benefit girl: Yeah.

951
01:33:16.500 --> 01:33:25.040
Lion Prado: So what what I was just doing over here is, I guess, because I wanted you to see the output of this particular function. I was assigning it to a variable.

952
01:33:25.220 --> 01:33:27.470
Lion Prado: and I was printing that variable for you to see.

953
01:33:29.740 --> 01:33:31.550
Benefit girl: Okay. Thank you.

954
01:33:32.440 --> 01:33:33.669
Lion Prado: You're welcome any other.

955
01:33:36.510 --> 01:33:38.170
Benefit girl: Not a question for me.

956
01:33:40.720 --> 01:33:44.419
Lion Prado: Yeah. So I'm wrapping up. It's function. It's more. You write your function and

957
01:33:46.160 --> 01:33:48.269
Lion Prado: and some other stuff which are

958
01:33:48.570 --> 01:33:52.990
Lion Prado: more move move kind of related stuff.

959
01:33:54.410 --> 01:34:01.099
Lion Prado: So what you've done today applies all programming language. You can apply the analysis, any programming language you come across.

960
01:34:02.790 --> 01:34:07.279
Lion Prado: And this, these are the kind of logic programmers combine together to form

961
01:34:07.410 --> 01:34:13.420
Lion Prado: any application you have seen this kind of and basic fundamentals

962
01:34:13.730 --> 01:34:20.320
Lion Prado: they combine. It is very important for you to understand it, fundamentals how they work.

963
01:34:22.030 --> 01:34:23.449
Lion Prado: So any other question.

964
01:34:29.430 --> 01:34:34.850
sophylon: Hello, and welcome to tutorialization.

965
01:34:40.200 --> 01:34:41.110
Lion Prado: Are we okay?

966
01:34:46.750 --> 01:34:48.419
Okai Peter: Yes, I I think so.

967
01:34:52.450 --> 01:34:54.330
Lion Prado: Okay, there's a question here.

968
01:34:55.410 --> 01:34:59.639
Lion Prado: please. If you send a question to the chat box and I'll let me say that

969
01:34:59.930 --> 01:35:01.290
Lion Prado: I'll open some tickets.

970
01:35:02.260 --> 01:35:05.430
Lion Prado: So there's a question if I want to look through from.

971
01:35:05.590 --> 01:35:07.559
Lion Prado: Okay. This question answered is right.

972
01:35:09.330 --> 01:35:11.180
Lion Prado: I'm hope I answered that question.

973
01:35:16.220 --> 01:35:17.019
LAWRENCE APPIAH-NUAMAH: And there's okay.

974
01:35:17.020 --> 01:35:18.360
LAWRENCE APPIAH-NUAMAH: Yeah, he sounds good.

975
01:35:19.350 --> 01:35:22.979
Lion Prado: Do you mean this is in a parallel with.

976
01:35:23.450 --> 01:35:26.779
Lion Prado: can you kindly, explain this question to me like

977
01:35:28.860 --> 01:35:33.479
Lion Prado: frame the question well, or any anyone who understand that question. Can you frame it well for me?

978
01:35:36.785 --> 01:35:37.150
Chemist: Hello!

979
01:35:38.290 --> 01:35:39.090
Lion Prado: Yeah. Hello.

980
01:35:40.690 --> 01:35:43.300
Chemist: Yeah, I think I I timed that

981
01:35:43.610 --> 01:35:48.889
Chemist: during. I think someone asked the question. And then you're trying to explain

982
01:35:49.560 --> 01:35:57.340
Chemist: that it's printed line by line. All kind of. So I was just thinking, does it? Do you mean it prints in a broad way.

983
01:36:01.336 --> 01:36:07.270
Lion Prado: It's prints, whatever. So it's like it's worth.

984
01:36:10.710 --> 01:36:14.260
Lion Prado: Oh, there's a word for it in any anyone who can help me that way.

985
01:36:16.670 --> 01:36:17.990
Lion Prado: The program is here.

986
01:36:18.450 --> 01:36:20.609
Lion Prado: How? How those kind of

987
01:36:20.770 --> 01:36:28.759
Lion Prado: how do we see it when a compiler works by checking line of code, line, by like a line by line. There's a word for that.

988
01:36:30.590 --> 01:36:31.850
Lion Prado: Any program manager.

989
01:36:32.120 --> 01:36:34.370
Lion Prado: The program is.

990
01:36:39.470 --> 01:36:42.750
Benefit girl: I didn't really get the question. Wait, let me see if I can try.

991
01:36:44.370 --> 01:36:50.610
Lion Prado: See? And then this, how programming compiler works. See? The compiler always works it doesn't.

992
01:36:51.000 --> 01:36:59.930
Lion Prado: It works by line. It's risk. It runs the code line by line. So it comes. It's risk line 45 line 46 line 47.

993
01:37:00.100 --> 01:37:18.060
Lion Prado: So when I was printing the results, you were saying, I was like, it's print, line by line. Am I trying to say, speaking in a parallel way? I'm just trying to say that because the compiler will read Line 54 before. Line 55. The compiler is automatically print line 54 before line 55. Hope I'm clear on this one.

994
01:37:20.550 --> 01:37:29.339
Benefit girl: Yes, it does it line by line, because in some programming language, if you want to like, compare your code. Okay, let's say, like an interpreter like.

995
01:37:29.866 --> 01:37:31.969
Lion Prado: Synchronous things. Thanks, thanks.

996
01:37:31.970 --> 01:37:35.839
Benefit girl: Yes, and do it like line by line, too. So

997
01:37:36.240 --> 01:37:39.758
Benefit girl: I saw an idea and said, sickness on the

998
01:37:40.150 --> 01:37:41.050
Lion Prado: Yeah.

999
01:37:41.050 --> 01:37:42.460
Benefit girl: He's cool.

1000
01:37:45.990 --> 01:37:48.400
Lion Prado: Alright. Thank you. Any other one.

1001
01:37:51.530 --> 01:38:11.359
Godfred Addai Amoako: Also, so it could also be relative depending on the language. Some languages like you can be able to add breakpoints to your code, and then it become asynchronous, and then it can jump the code, and probably especially when you're doing ui, those are like mobile apps. And maybe

1002
01:38:12.550 --> 01:38:16.920
Godfred Addai Amoako: yeah, you can be able to skip lines of code. But it's just probably error in debugging.

1003
01:38:17.180 --> 01:38:19.690
Godfred Addai Amoako: so I think it also depends on the language as well.

1004
01:38:20.770 --> 01:38:27.529
Lion Prado: Yeah, yeah, actually, I think there's that new ways. If you are using the wow, the the loops.

1005
01:38:27.690 --> 01:38:31.420
Lion Prado: you can, you can add, break and continue in their code.

1006
01:38:32.140 --> 01:38:33.330
Lion Prado: Bye, see you

1007
01:38:33.430 --> 01:38:45.489
Lion Prado: some. There are some stuff in languages, you know. It's not everything that we need use of. Yeah, they are just them, but we don't really use it. Those kind of stuff, if you are using it, and you don't take it. You end up writing backs.

1008
01:38:45.790 --> 01:38:48.099
Lion Prado: You just need to use it carefully.

1009
01:38:51.218 --> 01:38:53.969
Lion Prado: Golfer. Thanks for for your addition.

1010
01:38:55.340 --> 01:38:58.119
Chemist: Yeah, yeah, I think I agree with you.

1011
01:38:59.170 --> 01:38:59.850
Lion Prado: Wow!

1012
01:39:01.080 --> 01:39:02.570
Mr Douglas Amoo-Sargon: Yeah, apply on.

1013
01:39:03.640 --> 01:39:04.830
Lion Prado: Instead of us.

1014
01:39:04.830 --> 01:39:09.236
Mr Douglas Amoo-Sargon: Yes. So what what I wanted to add to what you were saying is that

1015
01:39:10.044 --> 01:39:23.500
Mr Douglas Amoo-Sargon: when it comes to like move right like we we execute like from one line to the other, right? And this is different from other programming languages. Because if you take a look at Nodejs.

1016
01:39:23.950 --> 01:39:28.479
Mr Douglas Amoo-Sargon: which usually like the event based stuff, right is is totally different. So

1017
01:39:28.960 --> 01:39:34.760
Mr Douglas Amoo-Sargon: for for move, let let us look at it as once we are done with 45 we move to 46,

1018
01:39:34.950 --> 01:39:43.049
Mr Douglas Amoo-Sargon: 47, 48. Then you're able to follow, like, you know, the logical steps through your code so that you don't get confused along the way.

1019
01:39:45.770 --> 01:39:49.590
Lion Prado: Alright. Thank you.

1020
01:39:50.010 --> 01:39:51.790
Lion Prado: Yeah, yeah. Yeah.

1021
01:39:53.360 --> 01:39:57.610
Lion Prado: Any other addition or question, or probably a surprise.

1022
01:40:03.310 --> 01:40:07.140
LAWRENCE APPIAH-NUAMAH: Yes, I think just like Mr. Douglas was saying.

1023
01:40:07.380 --> 01:40:25.417
LAWRENCE APPIAH-NUAMAH: this concurrent threads and all that. So it responds as like it will be. It will be online. Maybe let's say, line 40 something, and it will see a trade that needs attention. Then it will jump to that. So I think, movies quite specific.

1024
01:40:25.920 --> 01:40:37.070
LAWRENCE APPIAH-NUAMAH: But maybe something like Node. It would just be, let me see, node of priority, or something like concurrently running a lot of trades looking at what needs attention or something like that. Yeah, thank you.

1025
01:40:37.800 --> 01:40:40.440
Lion Prado: Yeah, alright, thanks, thanks.

1026
01:40:45.800 --> 01:40:51.620
Lion Prado: There's no question what's up trashing? Oh, I think we can wrap up the day.

1027
01:40:51.790 --> 01:40:54.490
Lion Prado: I hope you understand what?

1028
01:40:55.830 --> 01:41:02.180
Lion Prado: And if you if you didn't understand, you don't need to understand everything today, you just need to keep practicing

1029
01:41:02.730 --> 01:41:04.910
Lion Prado: programming. I always say.

1030
01:41:05.420 --> 01:41:08.189
I.T BRAIN: Understand so whatever.

1031
01:41:12.070 --> 01:41:16.980
Lion Prado: Whatever I'm doing today is more like a

1032
01:41:18.009 --> 01:41:21.510
Lion Prado: how, when we were in primary schools, learn alphabet.

1033
01:41:22.010 --> 01:41:25.230
Lion Prado: So when we learnt alphabet, and we learned 3 letters.

1034
01:41:25.420 --> 01:41:40.119
Lion Prado: and we weren't taught all the English ways. But today you can pick any book and you can read it. That was because you took your Sso and your whole series. And you understood everything. So that's how programming works you need to.

1035
01:41:42.030 --> 01:41:59.029
Lion Prado: And if you understand the basic wall, you can just apply it. And you can write any logic you want to write, and it doesn't matter the language. Once you understand how programming works, you can adapt to any language easily. Yeah. So let's take this as a you are learning.

1036
01:41:59.030 --> 01:42:02.707
Sam Edem: Teacher needs to be all puppets.

1037
01:42:03.530 --> 01:42:05.142
Sam Edem: Good! Oh, good!

1038
01:42:08.210 --> 01:42:10.610
Sam Edem: Oh, for me!

1039
01:42:11.260 --> 01:42:12.270
Sam Edem: Oh, but

1040
01:42:16.626 --> 01:42:18.633
Sam Edem: like.

1041
01:42:20.640 --> 01:42:27.540
Lion Prado: Oh, yeah, that's what I'm trying to say. Don't give up, was mate. We live S. Also. Ngo

1042
01:42:27.940 --> 01:42:29.310
Lion Prado: didn't understand it.

1043
01:42:29.510 --> 01:42:31.329
Lion Prado: You always keep reciting it.

1044
01:42:32.050 --> 01:42:34.000
Lion Prado: You kept reciting it down.

1045
01:42:34.000 --> 01:42:38.980
Lion Prado: Okay, became familiar before we started with. Sometimes you break it.

1046
01:42:39.260 --> 01:42:41.540
Lion Prado: you break it to combine the web.

1047
01:42:41.660 --> 01:42:47.350
Lion Prado: CO, 2 DAYD, and a carbon say today. So that's how programming also works.

1048
01:42:47.480 --> 01:42:48.690
Lion Prado: We are just learning them.

1049
01:42:49.910 --> 01:42:54.060
Lion Prado: Yeah. So we will combine it later to create an application.

1050
01:42:54.270 --> 01:42:58.180
Lion Prado: So if you are able to follow up to the last week.

1051
01:42:58.180 --> 01:43:00.730
Sam Edem: Okay, thank you.

1052
01:43:01.070 --> 01:43:04.480
Sam Edem: I'm consoled. I'm concerned.

1053
01:43:05.981 --> 01:43:12.800
Sam Edem: Of course I didn't leave the class, but I I didn't really get what you were doing

1054
01:43:13.460 --> 01:43:14.490
Sam Edem: prior to you.

1055
01:43:16.710 --> 01:43:17.589
Lion Prado: I get it.

1056
01:43:18.336 --> 01:43:21.999
Lion Prado: I know some of us. If this your 1st time.

1057
01:43:22.180 --> 01:43:26.860
Lion Prado: it's going to be difficult for you to understand it. So all you need to do is just projects

1058
01:43:26.970 --> 01:43:31.979
Lion Prado: politics. Yeah, go to it. Just be curious about whatever you want.

1059
01:43:32.590 --> 01:43:48.950
Lion Prado: Yeah, if if we are really curious, I I believe we can do it. Also, the programming is just out there, free on every platform. We just need curiosity to learn. That's what curiosity and consistency that's what keeps the flow. Also, just be back in the loop.

1060
01:43:49.250 --> 01:43:53.510
Lion Prado: Yeah. So whatever we have done today, it's actually Abcd.

1061
01:43:58.270 --> 01:44:03.140
Sam Edem: No problem. No, if you can just interpret all those

1062
01:44:03.940 --> 01:44:12.875
Sam Edem: numbers to English or French or German, something straight that really.

1063
01:44:24.038 --> 01:44:25.150
Lion Prado: Worry, less worry, less.

1064
01:44:25.150 --> 01:44:25.550
Sam Edem: Thank you.

1065
01:44:25.550 --> 01:44:27.210
Lion Prado: You'll get worry list.

1066
01:44:28.710 --> 01:44:34.234
Lion Prado: And someone's asking for Youtube channel. Yeah, there's a Youtube channel to learn to learn more. But

1067
01:44:34.910 --> 01:44:38.729
Lion Prado: let me see, they don't take you from basic. So they just explain

1068
01:44:39.020 --> 01:44:43.780
Lion Prado: stuff like they. They explain it like, you know, it's more like a lecture.

1069
01:44:44.150 --> 01:45:09.550
Lion Prado: And if you are in the Whatsapp group. I'll send those. I'll send a link to the Youtube code video for you to go and watch. But, like, I'm saying, they are not going to explain it by breaking stuff to you, even the Youtube video, some of them. They don't write code. They just show code screenshots and they explain it, they walk up. But if you really want to be good in move, I bet what the best way to reach the move book which I have been saying it is reach their move book, their move book, their move book.

1070
01:45:10.020 --> 01:45:12.939
Lion Prado: And with the move book there's a whole lot of reading

1071
01:45:13.350 --> 01:45:18.000
Lion Prado: for every line of code that they write. There's a whole lot of reading that is in that line of code

1072
01:45:19.500 --> 01:45:21.999
Lion Prado: what you really just let me see

1073
01:45:22.220 --> 01:45:26.150
Lion Prado: 2 sections every day. Try to read. There's 2 sessions, 2 sections.

1074
01:45:26.440 --> 01:45:31.739
Lion Prado: You don't need to understand everything. You just you grab the basics, and if you grab the basics here, you can do it.

1075
01:45:41.030 --> 01:45:46.179
Lion Prado: Yeah. So is that all? If that means with you, you can come in and you wrap up the day for us.

1076
01:45:52.590 --> 01:46:01.340
Sui Ghana: Okay, thank you so much. Lion, for a wonderful session tonight. I actually thought you would not be able to

1077
01:46:01.970 --> 01:46:10.139
Sui Ghana: make it to class, but as a good teacher you're able to come. So we had an event today, and I had to talk for

1078
01:46:10.320 --> 01:46:26.470
Sui Ghana: a long time. He had to for a long time, and somehow I thought maybe today we'll just say good night because I was actually going like I wanted to go and sleep. But he said, no, he would make it to class. So I had to also stay awake.

1079
01:46:27.419 --> 01:46:40.349
Sui Ghana: Okay. Then I think someone is asking a question. Please, do you have a video on how to set up move on windows. I think there is a video like, Do you have a video like that?

1080
01:46:41.350 --> 01:46:52.180
Lion Prado: Yeah, there's a video I've posted. I don't know if the person I know some of you, some of has joined today, and I'll repost all those things, and I'll ping them.

1081
01:46:54.300 --> 01:46:57.419
Sui Ghana: Who is asking for item 13.

1082
01:46:58.690 --> 01:47:08.448
Sui Ghana: We'll get you. Item 13. Don't worry. We'll ship it the next the next morning to Nigeria for you, so you will get it. Yeah. So

1083
01:47:09.560 --> 01:47:13.009
Sui Ghana: Lyra, you said, you have a video on.

1084
01:47:13.990 --> 01:47:19.280
Lion Prado: Okay, yeah. So I think about the move book. Kindly share the move book in the.

1085
01:47:19.710 --> 01:47:23.359
Sui Ghana: Our Whatsapp group so that anyone can access it.

1086
01:47:23.970 --> 01:47:24.990
Sui Ghana: Okay?

1087
01:47:27.040 --> 01:47:32.649
Sui Ghana: So for the 2 days we've had the classes, we've posted the

1088
01:47:32.870 --> 01:47:38.350
Sui Ghana: the video stage and Whatsapp group. So if you have any difficulty setting up

1089
01:47:39.173 --> 01:47:42.879
Sui Ghana: cli, you can kind kindly go through the

1090
01:47:43.180 --> 01:47:55.720
Sui Ghana: the recordings to see how you can set up your, you can install your cli. Then you can just get started. If you get stuck anywhere, you can just reach out in the group and people would

1091
01:47:55.980 --> 01:48:03.060
Sui Ghana: attend to you. Okay, so we'll be meeting again tomorrow same time. 8 pm, Utc time.

1092
01:48:03.300 --> 01:48:06.810
Sui Ghana: And yeah, I think we'll have to end

1093
01:48:07.110 --> 01:48:26.920
Sui Ghana: here tonight. Okay, it's past. And I don't want us to be staying more than 10 pm. Later than 10 pm. Okay. And thank you guys so much for participating today. Sam, laurie's benefits. Girl. Everyone, everyone who showed up today and

1094
01:48:27.453 --> 01:48:36.120
Sui Ghana: stayed till the end of the class. Thank you guys so much, and we'll see again tomorrow tomorrow evening. Yeah.

1095
01:48:36.230 --> 01:48:42.969
Sui Ghana: good night. We're ending the class now. Lion, I think you have to end from your side. Okay.

1096
01:48:44.960 --> 01:48:45.989
Sui Ghana: yeah, thank you, too.

1097
01:48:46.905 --> 01:48:48.760
Lion Prado: Everyone, right?

1098
01:48:48.760 --> 01:48:50.759
Sui Ghana: Yeah. Good night. Yeah. Bye.

